#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
library(ggplot2)
library(deSolve)
library(reshape2)
# Functions
calculate_derivatives <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
lambda_wt <- beta*I_wt/N
lambda_var <- beta*I_var/N
dS     <- -(lambda_wt + lambda_var)*S
dE_wt  <- lambda_wt*S - sigma*E_wt
dE_var <- lambda_var*S - sigma*E_var
dI_wt  <- sigma*E_wt - gamma*I_wt
dI_var <- sigma*E_var - gamma*I_var
dR     <- gamma*(I_wt + I_var)
dV1    <- 0
dV2    <- 0
return(list(c(dS, dE_wt, dE_var, dI_wt, dI_var, dR, dV1, dV2)))
}
)
}
# Pop parameters
N <- 100000
# Disease parameters
gamma <- 1/5
sigma <- 1/3
#R0 <- beta/gamma
# Vaccine parameters
VE_1_wt <- 0.6
VE_2_wt <- 0.95
VE_1_var <- 0
VE_2_var <- 0
results <- matrix(data = NA, nrow = 4, ncol = 4)
vec_R0 <- c(1.5, 2.0, 2.5, 3.0)
vec_vaxavail <- c(0.05, 0.1, 0.2, 0.3)
row.names(results) <- vec_R0
colnames(results) <- vec_vaxavail*100
irow <- 1
for (this_R0 in vec_R0){
icol <- 1
for (this_vaxavail in vec_vaxavail){
beta <- this_R0*gamma
num_doses <- this_vaxavail*N
# Initial conditions: full dosage and dose-sparing scenarios
I_wt_0 <- 0.01*N
I_var_0 <- 0
V2_0_full <- VE_2_wt*num_doses/2
V1_0_sparing <- VE_1_wt*num_doses
S_0_full <- N - I_wt_0 - I_var_0 - V2_0_full
S_0_sparing <- N - I_wt_0 - I_var_0 - V1_0_sparing
inits_full <- c(S=S_0_full,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=0, V2=V2_0_full)
inits_sparing <- c(S=S_0_sparing,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=V1_0_sparing, V2=0)
parameters <- c(gamma, beta, sigma, N,
VE_1_wt, VE_2_wt, VE_1_var, VE_2_var)
# Solving the differential equations
t <- seq(from=1, to=100, by=1)
df_full <- as.data.frame(lsoda(inits_full, t, calculate_derivatives, parameters))
df_sparing <- as.data.frame(lsoda(inits_sparing, t, calculate_derivatives, parameters))
# # Plot
# df_full_toplot <- melt(df_full, id = "time")
# df_sparing_toplot <- melt(df_sparing, id = "time")
#
# ggplot(df_full_toplot, aes(x = time, y = value/N,
#                     colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
#
# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
library(ggplot2)
library(deSolve)
library(reshape2)
# Functions
calculate_derivatives <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
lambda_wt <- beta*I_wt/N
lambda_var <- beta*I_var/N
dS     <- -(lambda_wt + lambda_var)*S
dE_wt  <- lambda_wt*S - sigma*E_wt
dE_var <- lambda_var*S - sigma*E_var
dI_wt  <- sigma*E_wt - gamma*I_wt
dI_var <- sigma*E_var - gamma*I_var
dR     <- gamma*(I_wt + I_var)
dV1    <- 0
dV2    <- 0
return(list(c(dS, dE_wt, dE_var, dI_wt, dI_var, dR, dV1, dV2)))
}
)
}
# Pop parameters
N <- 100000
# Disease parameters
gamma <- 1/5
sigma <- 1/3
#R0 <- beta/gamma
# Vaccine parameters
VE_1_wt <- 0.7
VE_2_wt <- 0.95
VE_1_var <- 0
VE_2_var <- 0
results <- matrix(data = NA, nrow = 4, ncol = 4)
vec_R0 <- c(1.5, 2.0, 2.5, 3.0)
vec_vaxavail <- c(0.05, 0.1, 0.2, 0.3)
row.names(results) <- vec_R0
colnames(results) <- vec_vaxavail*100
irow <- 1
for (this_R0 in vec_R0){
icol <- 1
for (this_vaxavail in vec_vaxavail){
beta <- this_R0*gamma
num_doses <- this_vaxavail*N
# Initial conditions: full dosage and dose-sparing scenarios
I_wt_0 <- 0.01*N
I_var_0 <- 0
V2_0_full <- VE_2_wt*num_doses/2
V1_0_sparing <- VE_1_wt*num_doses
S_0_full <- N - I_wt_0 - I_var_0 - V2_0_full
S_0_sparing <- N - I_wt_0 - I_var_0 - V1_0_sparing
inits_full <- c(S=S_0_full,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=0, V2=V2_0_full)
inits_sparing <- c(S=S_0_sparing,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=V1_0_sparing, V2=0)
parameters <- c(gamma, beta, sigma, N,
VE_1_wt, VE_2_wt, VE_1_var, VE_2_var)
# Solving the differential equations
t <- seq(from=1, to=100, by=1)
df_full <- as.data.frame(lsoda(inits_full, t, calculate_derivatives, parameters))
df_sparing <- as.data.frame(lsoda(inits_sparing, t, calculate_derivatives, parameters))
# # Plot
# df_full_toplot <- melt(df_full, id = "time")
# df_sparing_toplot <- melt(df_sparing, id = "time")
#
# ggplot(df_full_toplot, aes(x = time, y = value/N,
#                     colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
#
# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
library(ggplot2)
library(deSolve)
library(reshape2)
# Functions
calculate_derivatives <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
lambda_wt <- beta*I_wt/N
lambda_var <- beta*I_var/N
dS     <- -(lambda_wt + lambda_var)*S
dE_wt  <- lambda_wt*S + (1-VE_1_wt)*lambda_wt*V1 + (1-VE_2_wt)*lambda_wt*V2 - sigma*E_wt
dE_var <- lambda_var*S + (1-VE_1_var)*lambda_var*V1 + (1-VE_2_var)*lambda_var*V2 - sigma*E_var
dI_wt  <- sigma*E_wt - gamma*I_wt
dI_var <- sigma*E_var - gamma*I_var
dR     <- gamma*(I_wt + I_var)
dV1    <- -((1-VE_1_wt)*lambda_wt + (1-VE_1_var)*lambda_var)*V1
dV2    <- -((1-VE_2_wt)*lambda_wt + (1-VE_2_var)*lambda_var)*V2
return(list(c(dS, dE_wt, dE_var, dI_wt, dI_var, dR, dV1, dV2)))
}
)
}
# Pop parameters
N <- 100000
# Disease parameters
gamma <- 1/5
sigma <- 1/3
#R0 <- beta/gamma
# Vaccine parameters
VE_1_wt <- 0.5
VE_2_wt <- 0.95
VE_1_var <- 0
VE_2_var <- 0
results <- matrix(data = NA, nrow = 4, ncol = 4)
vec_R0 <- c(1.2, 2.0, 2.5, 3.0)
vec_vaxavail <- c(0.05, 0.1, 0.2, 0.3)
row.names(results) <- vec_R0
colnames(results) <- vec_vaxavail*100
irow <- 1
for (this_R0 in vec_R0){
icol <- 1
for (this_vaxavail in vec_vaxavail){
beta <- this_R0*gamma
num_doses <- this_vaxavail*N
# Initial conditions: full dosage and dose-sparing scenarios
I_wt_0 <- 0.01*N
I_var_0 <- 0
V2_0_full <- num_doses/2
V1_0_sparing <- num_doses
S_0_full <- N - I_wt_0 - I_var_0 - V2_0_full
S_0_sparing <- N - I_wt_0 - I_var_0 - V1_0_sparing
inits_full <- c(S=S_0_full,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=0, V2=V2_0_full)
inits_sparing <- c(S=S_0_sparing,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=V1_0_sparing, V2=0)
parameters <- c(gamma, beta, sigma, N,
VE_1_wt, VE_2_wt, VE_1_var, VE_2_var)
# Solving the differential equations
t <- seq(from=1, to=100, by=1)
df_full <- as.data.frame(lsoda(inits_full, t, calculate_derivatives, parameters))
df_sparing <- as.data.frame(lsoda(inits_sparing, t, calculate_derivatives, parameters))
# # Plot
# df_full_toplot <- melt(df_full, id = "time")
# df_sparing_toplot <- melt(df_sparing, id = "time")
#
# ggplot(df_full_toplot, aes(x = time, y = value/N,
#                     colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
#
# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
library(ggplot2)
library(deSolve)
library(reshape2)
# Functions
calculate_derivatives <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
lambda_wt <- beta*I_wt/N
lambda_var <- beta*I_var/N
dS     <- -(lambda_wt + lambda_var)*S
dE_wt  <- lambda_wt*S + (1-VE_1_wt)*lambda_wt*V1 + (1-VE_2_wt)*lambda_wt*V2 - sigma*E_wt
dE_var <- lambda_var*S + (1-VE_1_var)*lambda_var*V1 + (1-VE_2_var)*lambda_var*V2 - sigma*E_var
dI_wt  <- sigma*E_wt - gamma*I_wt
dI_var <- sigma*E_var - gamma*I_var
dR     <- gamma*(I_wt + I_var)
dV1    <- -((1-VE_1_wt)*lambda_wt + (1-VE_1_var)*lambda_var)*V1
dV2    <- -((1-VE_2_wt)*lambda_wt + (1-VE_2_var)*lambda_var)*V2
return(list(c(dS, dE_wt, dE_var, dI_wt, dI_var, dR, dV1, dV2)))
}
)
}
# Pop parameters
N <- 100000
# Disease parameters
gamma <- 1/5
sigma <- 1/3
#R0 <- beta/gamma
# Vaccine parameters
VE_1_wt <- 0.4
VE_2_wt <- 0.95
VE_1_var <- 0
VE_2_var <- 0
results <- matrix(data = NA, nrow = 4, ncol = 4)
vec_R0 <- c(1.2, 2.0, 2.5, 3.0)
vec_vaxavail <- c(0.05, 0.1, 0.2, 0.3)
row.names(results) <- vec_R0
colnames(results) <- vec_vaxavail*100
irow <- 1
for (this_R0 in vec_R0){
icol <- 1
for (this_vaxavail in vec_vaxavail){
beta <- this_R0*gamma
num_doses <- this_vaxavail*N
# Initial conditions: full dosage and dose-sparing scenarios
I_wt_0 <- 0.01*N
I_var_0 <- 0
V2_0_full <- num_doses/2
V1_0_sparing <- num_doses
S_0_full <- N - I_wt_0 - I_var_0 - V2_0_full
S_0_sparing <- N - I_wt_0 - I_var_0 - V1_0_sparing
inits_full <- c(S=S_0_full,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=0, V2=V2_0_full)
inits_sparing <- c(S=S_0_sparing,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=V1_0_sparing, V2=0)
parameters <- c(gamma, beta, sigma, N,
VE_1_wt, VE_2_wt, VE_1_var, VE_2_var)
# Solving the differential equations
t <- seq(from=1, to=100, by=1)
df_full <- as.data.frame(lsoda(inits_full, t, calculate_derivatives, parameters))
df_sparing <- as.data.frame(lsoda(inits_sparing, t, calculate_derivatives, parameters))
# # Plot
# df_full_toplot <- melt(df_full, id = "time")
# df_sparing_toplot <- melt(df_sparing, id = "time")
#
# ggplot(df_full_toplot, aes(x = time, y = value/N,
#                     colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
#
# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
library(ggplot2)
library(deSolve)
library(reshape2)
# Functions
calculate_derivatives <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
lambda_wt <- beta*I_wt/N
lambda_var <- beta*I_var/N
dS     <- -(lambda_wt + lambda_var)*S
dE_wt  <- lambda_wt*S + (1-VE_1_wt)*lambda_wt*V1 + (1-VE_2_wt)*lambda_wt*V2 - sigma*E_wt
dE_var <- lambda_var*S + (1-VE_1_var)*lambda_var*V1 + (1-VE_2_var)*lambda_var*V2 - sigma*E_var
dI_wt  <- sigma*E_wt - gamma*I_wt
dI_var <- sigma*E_var - gamma*I_var
dR     <- gamma*(I_wt + I_var)
dV1    <- -((1-VE_1_wt)*lambda_wt + (1-VE_1_var)*lambda_var)*V1
dV2    <- -((1-VE_2_wt)*lambda_wt + (1-VE_2_var)*lambda_var)*V2
return(list(c(dS, dE_wt, dE_var, dI_wt, dI_var, dR, dV1, dV2)))
}
)
}
# Pop parameters
N <- 100000
# Disease parameters
gamma <- 1/5
sigma <- 1/3
#R0 <- beta/gamma
# Vaccine parameters
VE_1_wt <- 0.6
VE_2_wt <- 0.95
VE_1_var <- 0
VE_2_var <- 0
results <- matrix(data = NA, nrow = 4, ncol = 4)
vec_R0 <- c(1.2, 2.0, 2.5, 3.0)
vec_vaxavail <- c(0.05, 0.1, 0.2, 0.3)
row.names(results) <- vec_R0
colnames(results) <- vec_vaxavail*100
irow <- 1
for (this_R0 in vec_R0){
icol <- 1
for (this_vaxavail in vec_vaxavail){
beta <- this_R0*gamma
num_doses <- this_vaxavail*N
# Initial conditions: full dosage and dose-sparing scenarios
I_wt_0 <- 0.01*N
I_var_0 <- 0
V2_0_full <- num_doses/2
V1_0_sparing <- num_doses
S_0_full <- N - I_wt_0 - I_var_0 - V2_0_full
S_0_sparing <- N - I_wt_0 - I_var_0 - V1_0_sparing
inits_full <- c(S=S_0_full,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=0, V2=V2_0_full)
inits_sparing <- c(S=S_0_sparing,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=V1_0_sparing, V2=0)
parameters <- c(gamma, beta, sigma, N,
VE_1_wt, VE_2_wt, VE_1_var, VE_2_var)
# Solving the differential equations
t <- seq(from=1, to=100, by=1)
df_full <- as.data.frame(lsoda(inits_full, t, calculate_derivatives, parameters))
df_sparing <- as.data.frame(lsoda(inits_sparing, t, calculate_derivatives, parameters))
# # Plot
# df_full_toplot <- melt(df_full, id = "time")
# df_sparing_toplot <- melt(df_sparing, id = "time")
#
# ggplot(df_full_toplot, aes(x = time, y = value/N,
#                     colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
#
# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
1.5 + 4.5*0.487-6*0.307
1.5 + 0.5*(4.5*0.937 - 6*0.88)
1.5 + 4.5*0.937 - 6*0.88
1.5 + 4.5*0.937 - 6*0.88 - 1.5
270/30
setwd("~/student_testing_project/unvacc_testing_in_mixed_pop_repo")
source("setup.R")
