ggsave("Fig2.png", fig2, device = png, width = 8, height = 5)
ggsave("Fig2.svg", fig2, device = svg, width = 8, height = 5)
#* III: Print transition points: ####
infection_transitions <- df[df$breakthrough >= 50,]  %>% group_by(psi) %>% summarize(phi=min(phi))
transmission_transitions <- df[df$dom_transmission < 50,]  %>% group_by(psi) %>% summarize(phi=min(phi))
print(paste0("Infection transition point: ",min(infection_transitions$phi), " - ",max(infection_transitions$phi)))
print(paste0("Transmission transition point: ",min(transmission_transitions$phi), " - ",max(transmission_transitions$phi)))
fig2 <- arrangeGrob(fig2toprow, fig2bottomrow, layout_matrix = lay,
heights = c(1, 1))
plot(fig2)
clear
rm(list = ls())
source("setup.R")
# _____________________________________________________________________
# SUPP FIGURE 2: ####
# Reff, % infections in the unvaccinated and % infections driven by the unvaccinated over phi and psi
# _____________________________________________________________________
R0 <- 6
alpha <- R0*gamma/N # transmissibility
baselinedf <- readRDS("dataframes/df_SuppFig2_baseline_R06.RData")
waningdf <- readRDS("dataframes/df_SuppFig2_waning_R06.RData")
boosteddf <- readRDS("dataframes/df_SuppFig2_boosted_R06.RData")
omicrondf <- readRDS("dataframes/df_SuppFig2_omicron_R06.RData")
# _____________________________________________________________________
#* II: Plot ####
# _____________________________________________________________________
theme_set(theme_minimal(base_size = 11))
theme_update(text = element_text(family="Arial", size = 11),
plot.title = element_text(size = 11, hjust = 0.5, family="Arial"))
# plot infections heatmap with Reff contours
p_Reff_inf <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff)) +
geom_raster(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired\nimmunity (%)") +
xlab("Population vaccination rate (%)") +
#ggtitle(expression(R[eff])) +
ggtitle("\nTotal infections") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 10),
legend.spacing.x = unit(0.15, 'cm'))
# plot hospitalizations heatmap with Reff contours
p_Reff_hosp <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff)) +
geom_raster(aes(fill = tot_hosp)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired\nimmunity (%)") +
xlab("Population vaccination rate (%)") +
#ggtitle(expression(R[eff])) +
ggtitle("\nTotal hospitalizations") +
scale_fill_viridis(option="viridis", limits = c(0, 400)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 10),
legend.spacing.x = unit(0.15, 'cm'))
# plot % infections in the unvaccinated
p_infection <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = breakthrough)) +
geom_raster(aes(fill = 100 - breakthrough)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of infections among\nunvaccinated individuals") +
labs(fill = "Percent\ninfections\nin vacc.") +
theme(legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) +
coord_fixed(1)
# plot dominant transmission
p_transmission <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = dom_transmission)) +
geom_raster(aes(fill = dom_transmission)) +
stat_contour(breaks = c(50), size = 0.4, color = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of transmission from\nunvaccinated individuals") +
labs(fill = "")+ #"Percent of\ntransmission\nby unvacc.") +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.title.align = 0.5,
legend.spacing.x = unit(0.15, 'cm')) +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"))+
coord_fixed(1)
# plot % hospitalizations in the unvaccinated
p_hospitalization <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = breakthrough_hosp)) +
geom_raster(aes(fill = 100 - breakthrough_hosp)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of hospitalizations among\nunvaccinated individuals") +
labs(fill = "Percent\nhospitalizations\nin vacc.") +
theme(legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) +
coord_fixed(1)
inf_legend <- get_legend(p_Reff_inf)
p_Reff_inf <- p_Reff_inf + theme(legend.position = "none")
hosp_legend <- get_legend(p_Reff_hosp)
p_Reff_hosp <- p_Reff_hosp + theme(legend.position = "none")
percent_legend <- get_legend(p_transmission)
p_transmission <- p_transmission + theme(legend.position = "none")
suppfig2toprow <- ggarrange(NULL,p_Reff_inf, NULL, inf_legend, NULL, p_Reff_hosp, NULL, hosp_legend,
labels = c(NA, "a", NA, NA, "b", NA, NA, NA),
nrow = 1,
ncol = 8,
#align = "hv",
widths = c(0.1, 1, -0.05, 0.5, 0.01, 1, -0.05, 0.5),
label.y = 0.95)
suppfig2bottomrow <- ggarrange(p_infection, NULL, p_transmission, NULL, p_hospitalization, percent_legend,
labels = c("c", NA, "d", NA, "e", NA),
nrow = 1,
ncol = 6,
#align = "hv",
widths = c(1, 0.05, 1, 0.05, 1, 0.3),
label.y = 1)
lay <- cbind(c(1, 2))
suppfig2 <- arrangeGrob(suppfig2toprow, suppfig2bottomrow, layout_matrix = lay,
heights = c(1, 1))
plot(suppfig2)
rm(list = ls())
source("setup.R")
baselinedf <- readRDS("dataframes/df_Fig2_baseline_R06.RData")
waningdf <- readRDS("dataframes/df_Fig2_waning_R06.RData")
boosteddf <- readRDS("dataframes/df_Fig2_boosted_R06.RData")
omicrondf <- readRDS("dataframes/df_Fig2_omicron_R06.RData")
# _____________________________________________________________________
#* II: Plot fig3 ####
# _____________________________________________________________________
p_waning <- ggplot(waningdf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("Waning/low VE") +
coord_fixed(1) +
theme(legend.position = "none")
p_baseline <- ggplot(baselinedf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("") +
xlab("Population vaccination rate (%)") +
ggtitle("Baseline VE") +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_boosted <- ggplot(boosteddf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("") +
xlab("Population vaccination rate (%)") +
ggtitle("Boosted/high VE") +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_omicron <- ggplot(omicrondf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("") +
xlab("Population vaccination rate (%)") +
ggtitle("Plausible Omicron") +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
fig3 <- ggarrange(p_waning, p_baseline, p_boosted, p_omicron,NULL,
nrow = 1,
align = "hv",
labels = c("a", "b", "c", "d",NULL),
widths = c(1,1,1,1,0.1))
# Uses the same dataframe as figure 2
baselinedf <- readRDS("dataframes/df_Fig2_baseline_R06.RData")
# Uses the same dataframe as figure 2
baselinedf <- readRDS("dataframes/df_Fig2_baseline.RData")
waningdf <- readRDS("dataframes/df_Fig2_waning.RData")
boosteddf <- readRDS("dataframes/df_Fig2_boosted.RData")
omicrondf <- readRDS("dataframes/df_Fig2_omicron.RData")
p_waning <- ggplot(waningdf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("Waning/low VE") +
coord_fixed(1) +
theme(legend.position = "none")
p_baseline <- ggplot(baselinedf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("") +
xlab("Population vaccination rate (%)") +
ggtitle("Baseline VE") +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_boosted <- ggplot(boosteddf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("") +
xlab("Population vaccination rate (%)") +
ggtitle("Boosted/high VE") +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_omicron <- ggplot(omicrondf, aes(x = phi*100, y = psi*100))+ #, colour = ..level..)) +
geom_contour(aes(z = dom_transmission), breaks = 50, size = my_linesize, color = transmcolor) +
geom_contour(aes(z = breakthrough), breaks = 50, size = my_linesize, color = infcolor) +
geom_contour(aes(z = breakthrough_hosp), breaks = 50, size = my_linesize, color = hospcolor) +
geom_contour(aes(z = Reff),breaks = 1, size = my_linesize/2, color = "black") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("") +
xlab("Population vaccination rate (%)") +
ggtitle("Plausible Omicron") +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
fig3 <- ggarrange(p_waning, p_baseline, p_boosted, p_omicron,NULL,
nrow = 1,
align = "hv",
labels = c("a", "b", "c", "d",NULL),
widths = c(1,1,1,1,0.1))
plot(fig3)
rm(list = ls())
source("setup.R")
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.05) # fine grain: by = 0.01
psi_vec <- seq(0, 1, by = 0.05)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$Reff_99 <- NA
df$Reff_50 <- NA
df$totinfections_notesting <- NA
df$totinfections_99 <- NA
df$totinfections_50 <- NA
scenarios = c("baseline","waning","boosted")
for (s in scenarios){
if(s == "baseline"){
this_VE_I <- baseline_VE_I
this_VE_S <- baseline_VE_S
this_VE_P <- baseline_VE_P
this_H_I  <- baseline_H_I
this_H_S  <- baseline_H_S
this_H_P  <- baseline_H_P
this_X_S  <- delta_X_S
this_X_I  <- delta_X_I
this_X_P  <- delta_X_P
hosp_rate <- infection_hosp_rate_delta
}
if(s == "waning"){
this_VE_I <- waning_VE_I
this_VE_S <- waning_VE_S
this_VE_P <- waning_VE_P
this_H_I  <- waning_H_I
this_H_S  <- waning_H_S
this_H_P  <- waning_H_P
this_X_S  <- delta_X_S
this_X_I  <- delta_X_I
this_X_P  <- delta_X_P
hosp_rate <- infection_hosp_rate_delta
}
if(s == "boosted"){
this_VE_I <- boosted_VE_I
this_VE_S <- boosted_VE_S
this_VE_P <- boosted_VE_P
this_H_I  <- boosted_H_I
this_H_S  <- boosted_H_S
this_H_P  <- boosted_H_P
this_X_S  <- delta_X_S
this_X_I  <- delta_X_I
this_X_P  <- delta_X_P
hosp_rate <- infection_hosp_rate_delta
}
for (i in 1:dim(df)[1]){
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_99[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_50[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_50, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_notesting[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_99[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_50[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_50, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
}
df$percent_reduc_inf_99 <- (df$totinfections_notesting - df$totinfections_99)/df$totinfections_notesting*100
df$percent_reduc_inf_50 <- (df$totinfections_notesting - df$totinfections_50)/df$totinfections_notesting*100
if(s == "baseline"){
baselinedf <- df
}
if(s == "waning"){
waningdf <- df
}
if(s == "boosted"){
boosteddf <- df
}
}
proc.time() - ptm
# If you want to save the
# If you didn't generate new dateframes, read in saved dataframes
waningdf <- readRDS("dataframes/df_Fig5_waning.RData")
baselinedf <- readRDS("dataframes/df_Fig5_baseline.RData")
boosteddf <- readRDS("dataframes/df_Fig5_boosted.RData")
#* II: Plot fig5 ####
for (i in 1:3) {
if (i == 1) {
df <- waningdf
} else if (i==2) {
df <- baselinedf
} else {
df <- boosteddf
}
percentreduc50 <- ggplot(df, aes(x = phi*100, y = psi*100)) +
geom_raster(aes(fill = percent_reduc_inf_50)) +
geom_contour(aes(z = Reff_50), breaks = 1, size = 0.6, color = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +#"Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
theme(legend.position = "none")
percentreduc99 <- ggplot(df, aes(x = phi*100, y = psi*100)) +
geom_raster(aes(fill = percent_reduc_inf_99)) +
geom_contour(aes(z = Reff_99), breaks = 1, size = 0.6, col = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "% reduction in infections due to testing") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
labs(fill = "") +
theme(axis.title.y = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_blank())
percent_legend <- get_legend(percentreduc99)
if (i == 1){
percentreduc50_waning <- percentreduc50 + onlyy_theme + ggtitle("Waning/low VE")
percentreduc99_waning <- percentreduc99 + theme(legend.position = "none")
} else if (i == 2){
percentreduc50_baseline <- percentreduc50 + nolabels_theme + ggtitle("Baseline VE")
percentreduc99_baseline <- percentreduc99 + onlyx_theme +
theme(legend.position = "none", plot.title = element_blank()) +
xlab("Population vaccination rate (%)")
} else {
percentreduc50_boosted <- percentreduc50 + nolabels_theme + ggtitle("Boosted/high VE")
percentreduc99_boosted <- percentreduc99 + onlyx_theme + theme(legend.position = "none", plot.title = element_blank())
}
}
panels <- ggarrange(percentreduc50_waning, NULL, percentreduc50_baseline, NULL, percentreduc50_boosted,
NULL, NULL, NULL, NULL, NULL,
percentreduc99_waning, NULL, percentreduc99_baseline, NULL, percentreduc99_boosted,
nrow = 3, ncol = 5,
align = "hv",
widths = c(1, -0.14, 1, -0.14, 1),
heights = c(1, -0.22, 1),
labels = c("a", NA, "    b", NA,"    c",
NA, NA, NA, NA, NA,
"d", NA, "    e", NA, "    f"),
label.y = 0.88)
lay <- rbind(c(1, 2))
fig5 <- arrangeGrob(panels, percent_legend, layout_matrix = lay,
widths = c(3, 0.5),
left = c("Infection-acquired immunity (%)"))
plot(fig5)
rm(list = ls())
source("setup.R")
# _____________________________________________________________________
# SUPP FIGURE 3: ####
# Total infections averted and percent reduction in infections for
#     all three VE scenarios (waning, baseline, boosted) and
#     both testing scenarios (weekly, 50% and 99% compliance)
# Same as main text Fig 5 with R0 = 6
# _____________________________________________________________________
R0 <- 6
alpha <- R0*gamma/N # transmissibility
# If you didn't generate new dateframes, read in saved dataframes
waningdf <- readRDS("dataframes/df_suppFig5_waning_R06.RData")
baselinedf <- readRDS("dataframes/df_suppFig5_baseline_R06.RData")
boosteddf <- readRDS("dataframes/df_suppFig5_boosted_R06.RData")
rm(list = ls())
source("setup.R")
# _____________________________________________________________________
# SUPP FIGURE 3: ####
# Total infections averted and percent reduction in infections for
#     all three VE scenarios (waning, baseline, boosted) and
#     both testing scenarios (weekly, 50% and 99% compliance)
# Same as main text Fig 5 with R0 = 6
# _____________________________________________________________________
R0 <- 6
alpha <- R0*gamma/N # transmissibility
# If you didn't generate new dateframes, read in saved dataframes
waningdf <- readRDS("dataframes/df_suppFig5_waning_R06.RData")
baselinedf <- readRDS("dataframes/df_suppFig5_baseline_R06.RData")
boosteddf <- readRDS("dataframes/df_suppFig5_boosted_R06.RData")
# _____________________________________________________________________
#* II: Plot supp fig 3 ####
# _____________________________________________________________________
for (i in 1:3) {
if (i == 1) {
df <- waningdf
} else if (i==2) {
df <- baselinedf
} else {
df <- boosteddf
}
percentreduc50 <- ggplot(df, aes(x = phi*100, y = psi*100)) +
geom_raster(aes(fill = percent_reduc_inf_50)) +
geom_contour(aes(z = Reff_50), breaks = 1, size = 0.6, color = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +#"Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
theme(legend.position = "none")
percentreduc99 <- ggplot(df, aes(x = phi*100, y = psi*100)) +
geom_raster(aes(fill = percent_reduc_inf_99)) +
geom_contour(aes(z = Reff_99), breaks = 1, size = 0.6, col = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "% reduction in infections due to testing") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
labs(fill = "") +
theme(axis.title.y = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_blank())
percent_legend <- get_legend(percentreduc99)
if (i == 1){
percentreduc50_waning <- percentreduc50 + onlyy_theme + ggtitle("Waning/low VE")
percentreduc99_waning <- percentreduc99 + theme(legend.position = "none")
} else if (i == 2){
percentreduc50_baseline <- percentreduc50 + nolabels_theme + ggtitle("Baseline VE")
percentreduc99_baseline <- percentreduc99 + onlyx_theme +
theme(legend.position = "none", plot.title = element_blank()) +
xlab("Population vaccination rate (%)")
} else {
percentreduc50_boosted <- percentreduc50 + nolabels_theme + ggtitle("Boosted/high VE")
percentreduc99_boosted <- percentreduc99 + onlyx_theme + theme(legend.position = "none", plot.title = element_blank())
}
}
panels <- ggarrange(percentreduc50_waning, NULL, percentreduc50_baseline, NULL, percentreduc50_boosted,
NULL, NULL, NULL, NULL, NULL,
percentreduc99_waning, NULL, percentreduc99_baseline, NULL, percentreduc99_boosted,
nrow = 3, ncol = 5,
align = "hv",
widths = c(1, -0.14, 1, -0.14, 1),
heights = c(1, -0.22, 1),
labels = c("a", NA, "    b", NA,"    c",
NA, NA, NA, NA, NA,
"d", NA, "    e", NA, "    f"),
label.y = 0.88)
lay <- rbind(c(1, 2))
suppfig3 <- arrangeGrob(panels, percent_legend, layout_matrix = lay,
widths = c(3, 0.5),
left = c("Infection-acquired immunity (%)"))
plot(suppfig3)
