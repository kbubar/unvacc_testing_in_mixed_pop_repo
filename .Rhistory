df$cases_in_v_by_v + df$cases_in_u_by_v) < 0.5))) - 1
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_vline(xintercept <- transmission_transition, linetype = "dashed", size = 0.5, col = mypurple)
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_vline(xintercept <- transmission_transition, linetype = "dashed", size = 0.5, col = mypurple) +
geom_line(size = my_linesize) +
ylab(paste("Transmission mode (%) ")) +
xlab(expression("Population vaccination rate (%)")) +
labs(fill = "") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none")
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_vline(xintercept = transmission_transition, linetype = "dashed", size = 0.5, col = mypurple) +
geom_line(size = my_linesize) +
ylab(paste("Transmission mode (%) ")) +
xlab(expression("Population vaccination rate (%)")) +
labs(fill = "") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none")
if (Reff_1 <= 100){
E <- E + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
E
28+18
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
#labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
labels = c("a", NA, "b", NA, NA, NA, "c", NA, "d"), # for supp R0 = 6
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
# _____________________________________________________________________
# FIG1 - infections with no testing ####
# _____________________________________________________________________
# for loop to run fig 1
for (i in 1){
#* Panel B - infected over time ####
this_theta <- 0 # no testing
this_q <- 0 # well-mixed
df_B <- run_leaky_model(this_phi, this_VE_I, this_VE_S, this_theta, this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
B <- ggplot(df_B, aes(x = time)) +
geom_line(aes(y = I_v + I_h), col = mylightgray, size = my_linesize) +
geom_line(aes(y = I_u + I_x), col = mygray, size = my_linesize, linetype = "longdash")  +
geom_line(aes(y = I_v + I_u + I_x + I_h), col = myblack, size = my_linesize) +
ylab("Infected (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 200)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1000)) + # 2500 for R0 = 6
onlyy_theme
#*  Panel D - transmission mode over time (i.e. who caused new daily cases) ####
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, this_VE_I, this_VE_S,
this_theta, this_q,
this_psi, this_X_I, this_X_S,
this_H_I, this_H_S)
df$cases_in_v_by_v <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u <- unlist(list_who_caused[[4]])
df$cases_in_v_by_ext <- unlist(list_who_caused[[5]])
df$cases_in_u_by_ext <- unlist(list_who_caused[[6]])
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_v_by_ext), col = mygray, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_ext), col = mylightgray, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 200)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 80)) + # C(0, 200) for R0 = 6
alllabels_theme
#* Panel C - total infections and breakthrough cases over phi ####
df <- data.frame(phi = phi_vec)
df$tot_infections <- sapply(phi_vec, compute_tot_infections,
VE_I = this_VE_I, VE_S = this_VE_S,
theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff <- sapply(phi_vec, compute_Reff,
VE_I = this_VE_I, VE_S = this_VE_S,
theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$breakthrough <- sapply(phi_vec, compute_percent_breakthrough_infections,
VE_I = this_VE_I, VE_S = this_VE_S,
theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
infection_transition <- min(which(df$breakthrough > 50)) - 2
C <- ggplot(df, aes(x=phi*100)) +
geom_vline(xintercept = infection_transition, linetype = "dashed", size = 0.5, col = mypurple) +
geom_line(aes(y=breakthrough), col = mylightgray, size = my_linesize) +
geom_line(aes(y=tot_infections/N*100), col = myblack, size = my_linesize) +
ylab("Total infected (%)") +
xlab("Population vaccination rate (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
sec.axis = sec_axis(~., name="Breakthrough infections (%)")) +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.title.y.right = element_text(color = mylightgray),
axis.title.y.left = element_text(color = myblack),
axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_blank(),
plot.margin=unit(c(5.5, 2, 5.5, 2), "pt")) # top, right, bottom, left
Reff_1 <- min(which(df$Reff <= 1)) - 1
if (Reff_1 <= 100){
C <- C + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
#* Panel E - cumulative transmission mode over phi ####
df <- data.frame(phi = phi_vec)
lists_who_caused <- lapply(phi_vec, compute_who_caused_cases_tot,
VE_I = this_VE_I, VE_S = this_VE_S,
theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
mat_who_caused <- matrix(unlist(lists_who_caused), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext <- mat_who_caused[,5]
df$cases_in_u_by_ext <- mat_who_caused[,6]
df$cases_in_v_by_v <- mat_who_caused[,1]
df$cases_in_u_by_v <- mat_who_caused[,3]
df$cases_in_v_by_u <- mat_who_caused[,2]
df$cases_in_u_by_u <- mat_who_caused[,4]
df_toplot <- melt(df, id = c("phi"))
transmission_transition <- min(which(((df$cases_in_u_by_u + df$cases_in_v_by_u)/
(df$cases_in_u_by_u + df$cases_in_v_by_u +
df$cases_in_v_by_v + df$cases_in_u_by_v) < 0.5))) - 1
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_vline(xintercept = transmission_transition, linetype = "dashed", size = 0.5, col = mypurple) +
geom_line(size = my_linesize) +
ylab(paste("Transmission mode (%) ")) +
xlab(expression("Population vaccination rate (%)")) +
labs(fill = "") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none")
if (Reff_1 <= 100){
E <- E + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
}
ggsave("fig1_v1.pdf", device = cairo_pdf, width = 8, height = 5.5)
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
#labels = c("a", NA, "b", NA, NA, NA, "c", NA, "d"), # for supp R0 = 6
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
ggsave("fig1_v1.pdf", device = cairo_pdf, width = 8, height = 5.5)
# _____________________________________________________________________
# FIG3 - w/testing ####
# _____________________________________________________________________
this_q <- 0
panels <- c(1,2)
this_panel <-
1
R0 = ifelse(this_panel==1, 4, 6)
alpha <- R0*gamma/N # transmissibility
R0_mod_theta <- alpha*N*(1-mod_theta)/gamma
R0_real_theta <- alpha*N*(1-real_theta)/gamma
df <- data.frame(phi = phi_vec)
# Total infections with various testing scenarios
df$tot_infections_notesting <- sapply(phi_vec, compute_tot_infections,
VE_I = this_VE_I, VE_S = this_VE_S, theta = 0, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$tot_infections_modtesting <- sapply(phi_vec, compute_tot_infections,
VE_I = this_VE_I, VE_S = this_VE_S, theta = mod_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$tot_infections_realtesting <- sapply(phi_vec, compute_tot_infections,
VE_I = this_VE_I, VE_S = this_VE_S, theta = real_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
# Total number of cases averted
df$cases_averted_mod <- (df$tot_infections_notesting - df$tot_infections_modtesting)
df$cases_averted_real <- (df$tot_infections_notesting - df$tot_infections_realtesting)
# Proportion of infections averted in unvax class
df$u_infections_notesting <- sapply(phi_vec, compute_u_infections,
VE_I = this_VE_I, VE_S = this_VE_S, theta = 0, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$u_infections_modtesting <- sapply(phi_vec, compute_u_infections,
VE_I = this_VE_I, VE_S = this_VE_S, theta = mod_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$u_infections_realtesting <- sapply(phi_vec, compute_u_infections,
VE_I = this_VE_I, VE_S = this_VE_S, theta = real_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$prop_cases_averted_u_mod <- (df$u_infections_notesting - df$u_infections_modtesting) / df$cases_averted_mod * 100
df$prop_cases_averted_u_real <- (df$u_infections_notesting - df$u_infections_realtesting) / df$cases_averted_real * 100
df$num_cases_averted_u_mod <- (df$u_infections_notesting - df$u_infections_modtesting)
df$num_cases_averted_u_real <- (df$u_infections_notesting - df$u_infections_realtesting)
df$num_cases_averted_v_mod <- (df$cases_averted_mod - df$num_cases_averted_u_mod)
df$num_cases_averted_v_real <- (df$cases_averted_real - df$num_cases_averted_u_real)
# Reff
df$Reff_notesting <- sapply(phi_vec, compute_Reff,
VE_I = this_VE_I, VE_S = this_VE_S, theta = 0, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_modtesting <- sapply(phi_vec, compute_Reff,
VE_I = this_VE_I, VE_S = this_VE_S, theta = mod_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_realtesting <- sapply(phi_vec, compute_Reff,
VE_I = this_VE_I, VE_S = this_VE_S, theta = real_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
# or run the model
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.05)
psi_vec <- seq(0, 1, by = 0.05)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$Reff_mod <- NA
df$Reff_real <- NA
df$totinfections_mod <- NA
df$totinfections_real <- NA
df$infections_averted_mod <- NA
df$infections_averted_real <- NA
df$infections_averted_per100_mod <- NA
df$infections_averted_per100_real <- NA
for (i in 1:dim(df)[1]){
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_mod[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = mod_theta, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_real[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = real_theta, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_notesting[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_mod[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = mod_theta, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_real[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = real_theta, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$infections_averted_mod[i] <- df$totinfections_notesting[i] - df$totinfections_mod[i]
df$infections_averted_real[i] <- df$totinfections_notesting[i] - df$totinfections_real[i]
num_tests_mod <- compute_num_tests(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = mod_theta, freq = low_freq, inf_period = 1/gamma,
compliance = high_compliance, q = this_q,
df$psi[i], this_X_I, this_X_S, this_H_I, this_H_S)
num_tests_real <- compute_num_tests(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = real_theta, freq = low_freq, inf_period = 1/gamma,
compliance = low_compliance, q = this_q,
df$psi[i], this_X_I, this_X_S, this_H_I, this_H_S)
df$infections_averted_per100_mod[i] <- df$infections_averted_mod[i]/num_tests_mod*100
df$infections_averted_per100_real[i] <- df$infections_averted_real[i]/num_tests_real*100
}
proc.time() - ptm
135/60
# _____________________________________________________________________
#* II: Plot fig4 ####
# _____________________________________________________________________
mylinesize <- 0.4
infectavert_mod <- ggplot(df, aes(x = phi*100, y = psi*100, fill = infections_averted_mod)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,14000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
R0
# _____________________________________________________________________
#* II: Plot fig4 ####
# _____________________________________________________________________
mylinesize <- 0.4
infectavert_mod <- ggplot(df, aes(x = phi*100, y = psi*100, fill = tot_infections_mod)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,14000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
max(df$totinfections_notesting)
infectavert <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_notesting)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert_real <- ggplot(df, aes(x = phi*100, y = psi*100, fill = tot_infections_real)) +
geom_tile() +
stat_contour(aes(z = Reff_real), breaks = 1, size = mylinesize, col =  "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 50% compliance", "") +# "Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.position = "none",
plot.title = element_text(color = myyellow),
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
ggarrange(infectavert, infectavert_real, infectavert_mod, nrow = 1)
infectavert_real <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_real)) +
geom_tile() +
stat_contour(aes(z = Reff_real), breaks = 1, size = mylinesize, col =  "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 50% compliance", "") +# "Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.position = "none",
plot.title = element_text(color = myyellow),
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
ggarrange(infectavert, infectavert_real, infectavert_mod, nrow = 1)
infectavert <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_notesting)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert
infectavert <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_notesting)) +
geom_tile() +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert
infectavert_mod <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_mod)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert_mod
infectavert_real <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_real)) +
geom_tile() +
stat_contour(aes(z = Reff_real), breaks = 1, size = mylinesize, col =  "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 50% compliance", "") +# "Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.position = "none",
plot.title = element_text(color = myyellow),
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
infectavert_real
infectavert <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_notesting)) +
geom_tile() +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("No testing", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = mygray),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert
ggarrange(infectavert, infectavert_mod, infectavert_real, nrow = 1)
infectavert <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_notesting)) +
geom_tile() +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("No testing", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = mygray),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert_mod <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_mod)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
#stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert_real <- ggplot(df, aes(x = phi*100, y = psi*100, fill = totinfections_real)) +
geom_tile() +
stat_contour(aes(z = Reff_real), breaks = 1, size = mylinesize, col =  "white") +
#stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 50% compliance", "") +# "Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,20000)) + #14000 for R0=6
theme(#legend.position = "none",
plot.title = element_text(color = myyellow),
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
ggarrange(infectavert, infectavert_mod, infectavert_real, nrow = 1)
ggarrange(infectavert, infectavert_real, infectavert_mod, nrow = 1)
compute_Reff(0.75, 0.1, 0.3, 0, 0)
print(compute_Reff(0.75, 0.1, 0.3, 0, 0))
