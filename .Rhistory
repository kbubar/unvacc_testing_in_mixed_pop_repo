#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
library(ggplot2)
library(deSolve)
library(reshape2)
# Functions
calculate_derivatives <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
lambda_wt <- beta*I_wt/N
lambda_var <- beta*I_var/N
dS     <- -(lambda_wt + lambda_var)*S
dE_wt  <- lambda_wt*S + (1-VE_1_wt)*lambda_wt*V1 + (1-VE_2_wt)*lambda_wt*V2 - sigma*E_wt
dE_var <- lambda_var*S + (1-VE_1_var)*lambda_var*V1 + (1-VE_2_var)*lambda_var*V2 - sigma*E_var
dI_wt  <- sigma*E_wt - gamma*I_wt
dI_var <- sigma*E_var - gamma*I_var
dR     <- gamma*(I_wt + I_var)
dV1    <- -((1-VE_1_wt)*lambda_wt + (1-VE_1_var)*lambda_var)*V1
dV2    <- -((1-VE_2_wt)*lambda_wt + (1-VE_2_var)*lambda_var)*V2
return(list(c(dS, dE_wt, dE_var, dI_wt, dI_var, dR, dV1, dV2)))
}
)
}
# Pop parameters
N <- 100000
# Disease parameters
gamma <- 1/5
sigma <- 1/3
#R0 <- beta/gamma
# Vaccine parameters
VE_1_wt <- 0.6
VE_2_wt <- 0.95
VE_1_var <- 0
VE_2_var <- 0
results <- matrix(data = NA, nrow = 4, ncol = 4)
vec_R0 <- c(1.2, 2.0, 2.5, 3.0)
vec_vaxavail <- c(0.05, 0.1, 0.2, 0.3)
row.names(results) <- vec_R0
colnames(results) <- vec_vaxavail*100
irow <- 1
for (this_R0 in vec_R0){
icol <- 1
for (this_vaxavail in vec_vaxavail){
beta <- this_R0*gamma
num_doses <- this_vaxavail*N
# Initial conditions: full dosage and dose-sparing scenarios
I_wt_0 <- 0.01*N
I_var_0 <- 0
V2_0_full <- num_doses/2
V1_0_sparing <- num_doses
S_0_full <- N - I_wt_0 - I_var_0 - V2_0_full
S_0_sparing <- N - I_wt_0 - I_var_0 - V1_0_sparing
inits_full <- c(S=S_0_full,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=0, V2=V2_0_full)
inits_sparing <- c(S=S_0_sparing,
E_wt=0, E_var=0,
I_wt=I_wt_0, I_var=I_var_0,
R=0,
V1=V1_0_sparing, V2=0)
parameters <- c(gamma, beta, sigma, N,
VE_1_wt, VE_2_wt, VE_1_var, VE_2_var)
# Solving the differential equations
t <- seq(from=1, to=100, by=1)
df_full <- as.data.frame(lsoda(inits_full, t, calculate_derivatives, parameters))
df_sparing <- as.data.frame(lsoda(inits_sparing, t, calculate_derivatives, parameters))
# # Plot
# df_full_toplot <- melt(df_full, id = "time")
# df_sparing_toplot <- melt(df_sparing, id = "time")
#
# ggplot(df_full_toplot, aes(x = time, y = value/N,
#                     colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
#
# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
1.5 + 4.5*0.487-6*0.307
1.5 + 0.5*(4.5*0.937 - 6*0.88)
1.5 + 4.5*0.937 - 6*0.88
1.5 + 4.5*0.937 - 6*0.88 - 1.5
270/30
source("setup.R")
setwd("~/student_testing_project/unvacc_testing_in_mixed_pop_repo")
source("setup.R")
R0
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.01) # fine grid : by = 0.01 (~20 min)
psi_vec <- seq(0, 1, by = 0.01)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$breakthrough <- NA
df$dom_transmission <- NA
df$tot_infections <- NA
this_VE_I <- waning_VE_I
this_VE_S <- waning_VE_S
this_H_I  <- waning_H_I
this_H_S  <- waning_H_S
for (i in 1:dim(df)[1]){
df$tot_infections[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$breakthrough[i] <- compute_percent_breakthrough_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$dom_transmission[i] <- (compute_dominant_transmission(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S))*100
}
saveRDS(df,file="df_fig2_waning.RData")
proc.time() - ptm
1152/60
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.01) # fine grid : by = 0.01 (~20 min)
psi_vec <- seq(0, 1, by = 0.01)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$breakthrough <- NA
df$dom_transmission <- NA
df$tot_infections <- NA
this_VE_I <- boosted_VE_I
this_VE_S <- boosted_VE_S
this_H_I  <- boosted_H_I
this_H_S  <- boosted_H_S
for (i in 1:dim(df)[1]){
df$tot_infections[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$breakthrough[i] <- compute_percent_breakthrough_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$dom_transmission[i] <- (compute_dominant_transmission(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S))*100
}
saveRDS(df,file="df_Fig2_boosted.RData")
proc.time() - ptm
for (thisrow in 1:2){
if (thisrow == 1){
baselinedf <- readRDS("df_fig2_baseline.RData")
waningdf <- readRDS("df_fig2_waning.RData")
boosteddf <- readRDS("df_fig2_boosted.RData")
} else {
baselinedf <- readRDS("df_suppfig2_baseline_R06.RData")
waningdf <- readRDS("df_suppfig2_waning_R06.RData")
boosteddf <- readRDS("df_suppfig2_boosted_R06.RData")
}
p_waning <- ggplot(waningdf, aes(x = phi*100, y = psi*100, z = Reff))+
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") +# xlab("Population vaccination rate (%)") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_baseline <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_boosted <- ggplot(boosteddf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") + # xlab("Population vaccination rate (%)")
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.7, 'cm'),
axis.title.y = element_blank())
num_legend <- get_legend(p_boosted)
if (thisrow == 1){
p_waning_R04 <- p_waning + ggtitle("Waning/low VE") + onlyy_theme
p_baseline_R04 <- p_baseline + ggtitle("Baseline VE") + nolabels_theme
p_boosted_R04 <- p_boosted + ggtitle("Boosted/high VE") + theme(legend.position = "none") +
nolabels_theme
} else {
p_waning_R06 <- p_waning
p_baseline_R06 <- p_baseline + onlyx_theme + xlab("Population vaccination rate (%)")
p_boosted_R06 <- p_boosted + theme(legend.position = "none")  + onlyx_theme
}
}
panels <- ggarrange(p_waning_R04, NULL, p_baseline_R04, NULL, p_boosted_R04,
NULL, NULL, NULL, NULL, NULL,
p_waning_R06, NULL, p_baseline_R06, NULL, p_boosted_R06,
nrow = 3, ncol = 5,
align = "hv",
widths = c(1, -0.14, 1, -0.14, 1),
heights = c(1, -0.22, 1),
labels = c("a", NA, "    b", NA,"    c",
NA, NA, NA, NA, NA,
"d", NA, "    e", NA, "    f"),
label.y = 0.88)
panels
baselinedf <- readRDS("df_fig2_baseline.RData")
waningdf <- readRDS("df_fig2_waning.RData")
View(baselinedf)
View(waningdf)
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.01) # fine grid : by = 0.01 (~20 min)
psi_vec <- seq(0, 1, by = 0.01)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$breakthrough <- NA
df$dom_transmission <- NA
df$tot_infections <- NA
this_VE_I <- low_VE_I
this_VE_S <- low_VE_S
this_H_I  <- low_H_I
this_H_S  <- low_H_S
for (i in 1:dim(df)[1]){
df$tot_infections[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$breakthrough[i] <- compute_percent_breakthrough_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$dom_transmission[i] <- (compute_dominant_transmission(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S))*100
}
saveRDS(df,file="df_Fig2_waning.RData")
proc.time() - ptm
for (thisrow in 1:2){
if (thisrow == 1){
baselinedf <- readRDS("df_fig2_baseline.RData")
waningdf <- readRDS("df_fig2_waning.RData")
boosteddf <- readRDS("df_fig2_boosted.RData")
} else {
baselinedf <- readRDS("df_suppfig2_baseline_R06.RData")
waningdf <- readRDS("df_suppfig2_waning_R06.RData")
boosteddf <- readRDS("df_suppfig2_boosted_R06.RData")
}
p_waning <- ggplot(waningdf, aes(x = phi*100, y = psi*100, z = Reff))+
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") +# xlab("Population vaccination rate (%)") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_baseline <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_boosted <- ggplot(boosteddf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") + # xlab("Population vaccination rate (%)")
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.7, 'cm'),
axis.title.y = element_blank())
num_legend <- get_legend(p_boosted)
if (thisrow == 1){
p_waning_R04 <- p_waning + ggtitle("Waning/low VE") + onlyy_theme
p_baseline_R04 <- p_baseline + ggtitle("Baseline VE") + nolabels_theme
p_boosted_R04 <- p_boosted + ggtitle("Boosted/high VE") + theme(legend.position = "none") +
nolabels_theme
} else {
p_waning_R06 <- p_waning
p_baseline_R06 <- p_baseline + onlyx_theme + xlab("Population vaccination rate (%)")
p_boosted_R06 <- p_boosted + theme(legend.position = "none")  + onlyx_theme
}
}
panels <- ggarrange(p_waning_R04, NULL, p_baseline_R04, NULL, p_boosted_R04,
NULL, NULL, NULL, NULL, NULL,
p_waning_R06, NULL, p_baseline_R06, NULL, p_boosted_R06,
nrow = 3, ncol = 5,
align = "hv",
widths = c(1, -0.14, 1, -0.14, 1),
heights = c(1, -0.22, 1),
labels = c("a", NA, "    b", NA,"    c",
NA, NA, NA, NA, NA,
"d", NA, "    e", NA, "    f"),
label.y = 0.88)
panels
R0 <0 6
R0 <- 6
for (thisrow in 1:2){
if (thisrow == 1){
baselinedf <- readRDS("df_fig2_baseline.RData")
waningdf <- readRDS("df_fig2_waning.RData")
boosteddf <- readRDS("df_fig2_boosted.RData")
} else {
baselinedf <- readRDS("df_suppfig2_baseline_R06.RData")
waningdf <- readRDS("df_suppfig2_waning_R06.RData")
boosteddf <- readRDS("df_suppfig2_boosted_R06.RData")
}
p_waning <- ggplot(waningdf, aes(x = phi*100, y = psi*100, z = Reff))+
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") +# xlab("Population vaccination rate (%)") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_baseline <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
theme(legend.position = "none",
axis.title.y = element_blank())
p_boosted <- ggplot(boosteddf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, nudge_y = 1, nudge_x = 2, skip = 0)+
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +
xlab("") + # xlab("Population vaccination rate (%)")
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.7, 'cm'),
axis.title.y = element_blank())
num_legend <- get_legend(p_boosted)
if (thisrow == 1){
p_waning_R04 <- p_waning + ggtitle("Waning/low VE") + onlyy_theme
p_baseline_R04 <- p_baseline + ggtitle("Baseline VE") + nolabels_theme
p_boosted_R04 <- p_boosted + ggtitle("Boosted/high VE") + theme(legend.position = "none") +
nolabels_theme
} else {
p_waning_R06 <- p_waning
p_baseline_R06 <- p_baseline + onlyx_theme + xlab("Population vaccination rate (%)")
p_boosted_R06 <- p_boosted + theme(legend.position = "none")  + onlyx_theme
}
}
panels <- ggarrange(p_waning_R04, NULL, p_baseline_R04, NULL, p_boosted_R04,
NULL, NULL, NULL, NULL, NULL,
p_waning_R06, NULL, p_baseline_R06, NULL, p_boosted_R06,
nrow = 3, ncol = 5,
align = "hv",
widths = c(1, -0.14, 1, -0.14, 1),
heights = c(1, -0.22, 1),
labels = c("a", NA, "    b", NA,"    c",
NA, NA, NA, NA, NA,
"d", NA, "    e", NA, "    f"),
label.y = 0.88)
panels
lay <- rbind(c(1, 2))
suppfig2 <- arrangeGrob(panels, num_legend, layout_matrix = lay,
widths = c(3, 0.5),
left = c("Infection-acquired immunity (%)"))
ggsave("SuppFig2.pdf", suppfig2, device = cairo_pdf, width = 8, height = 5)
ggsave("SuppFig2.svg", suppfig2, device = svg, width = 8, height = 5)
# Either read in the corresponding RDS file
waningdf <- readRDS("df_suppFig5_waning_R06.RData")
baselinedf <- readRDS("df_suppFig5_baseline_R06.RData")
boosteddf <- readRDS("df_suppFig5_boosted_R06.RData")
#* II: Plot fig5 ####
for (i in 1:3) {
if (i == 1) {
df <- waningdf
} else if (i==2) {
df <- baselinedf
} else {
df <- boosteddf
}
percentreduc50 <- ggplot(df, aes(x = phi*100, y = psi*100)) + #, colour = ..level..)) +
geom_tile(aes(fill = percent_reduc_inf_50)) +
geom_contour(aes(z = Reff_50), breaks = 1, size = 0.6, color = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("") +#"Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
theme(legend.position = "none")
percentreduc99 <- ggplot(df, aes(x = phi*100, y = psi*100)) + #, colour = ..level..)) +
geom_tile(aes(fill = percent_reduc_inf_99)) +
geom_contour(aes(z = Reff_99), breaks = 1, size = 0.6, col = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "% reduction in infections due to testing") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
labs(fill = "") +
theme(axis.title.y = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_blank()) #element_text(hjust = 0.5))
percent_legend <- get_legend(percentreduc99)
if (i == 1){
percentreduc50_waning <- percentreduc50 + onlyy_theme + ggtitle("Waning/low VE")
percentreduc99_waning <- percentreduc99 + theme(legend.position = "none")
} else if (i == 2){
percentreduc50_baseline <- percentreduc50 + nolabels_theme + ggtitle("Baseline VE")
percentreduc99_baseline <- percentreduc99 + onlyx_theme +
theme(legend.position = "none", plot.title = element_blank()) +
xlab("Population vaccination rate (%)")
} else {
percentreduc50_boosted <- percentreduc50 + nolabels_theme + ggtitle("Boosted/high VE")
percentreduc99_boosted <- percentreduc99 + onlyx_theme + theme(legend.position = "none", plot.title = element_blank())
}
}
panels <- ggarrange(percentreduc50_waning, NULL, percentreduc50_baseline, NULL, percentreduc50_boosted,
NULL, NULL, NULL, NULL, NULL,
percentreduc99_waning, NULL, percentreduc99_baseline, NULL, percentreduc99_boosted,
nrow = 3, ncol = 5,
align = "hv",
widths = c(1, -0.14, 1, -0.14, 1),
heights = c(1, -0.22, 1),
labels = c("a", NA, "    b", NA,"    c",
NA, NA, NA, NA, NA,
"d", NA, "    e", NA, "    f"),
label.y = 0.88)
lay <- rbind(c(1, 2))
fig5 <- arrangeGrob(panels, percent_legend, layout_matrix = lay,
widths = c(3, 0.5),
left = c("Infection-acquired immunity (%)"))
ggsave("suppFig5.svg", fig5, device = svg, width = 8, height = 5)
