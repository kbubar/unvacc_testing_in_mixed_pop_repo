#ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
ggsave("fig3test2.pdf", device = cairo_pdf, width = 8, height = 5)
fig3 <- ggarrange(A, NULL, B, NULL, C, NULL, D, NULL, E, NULL,
nrow = 1,
widths = c(1, -0.09, 1, -0.2, 1, -0.2, 1 , -0.09, 1, 0.1),
align = "hv",
labels = c(' a', NA, ' b', NA,'     c',NA, '     d', NA,'   e', NA),
label.y = 0.79)
annotate_figure(fig3,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2, hjust = 0))
#ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
ggsave("fig3test2.pdf", device = cairo_pdf, width = 8, height = 5)
#ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
ggsave("fig3test2.pdf", device = cairo_pdf, width = 8, height = 5)
ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
# _____________________________________________________________________
# FIG3 - w/homophily ####
# _____________________________________________________________________
this_phi <- 0.55
this_theta <- 0
R0 <- 4
alpha <- R0*gamma/N # transmissibility
for (i in 1){
#*
#* Panel A - transmission modes over time, phi = 55%, q = 0, 0.8 ####
#*
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, q = q0)
df$cases_in_v_by_v_q0 <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u_q0 <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v_q0 <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u_q0 <- unlist(list_who_caused[[4]])
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, q = qhigh)
df$cases_in_v_by_v_qhigh <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u_qhigh <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v_qhigh <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u_qhigh <- unlist(list_who_caused[[4]])
A <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v_q0), col = mylightteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_u_q0), col = mylightorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_u_q0), col = mydarkorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_v_q0), col = mydarkteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_v_qhigh), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u_qhigh), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u_qhigh), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v_qhigh), col = mydarkteal, size = my_linesize) +
ylab("")+
#ggtitle("New daily\ninfections (#)") +
ggtitle("New daily infections (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 150), breaks = c(0, 75, 150)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 300)) +
alllabels_theme
#*
#* Panel B - line plot of transmission modes over phi with q = 0.8 ####
#*
df <- data.frame(phi = phi_vec)
lists_who_caused <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused <- matrix(unlist(lists_who_caused), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext <- mat_who_caused[,5]
df$cases_in_u_by_ext <- mat_who_caused[,6]
df$cases_in_v_by_v <- mat_who_caused[,1]
df$cases_in_u_by_v <- mat_who_caused[,3]
df$cases_in_v_by_u <- mat_who_caused[,2]
df$cases_in_u_by_u <- mat_who_caused[,4]
lists_who_caused_qhigh <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused_qhigh <- matrix(unlist(lists_who_caused_qhigh), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext_qhigh <- mat_who_caused_qhigh[,5]
df$cases_in_u_by_ext_qhigh <- mat_who_caused_qhigh[,6]
df$cases_in_v_by_v_qhigh <- mat_who_caused_qhigh[,1]
df$cases_in_u_by_v_qhigh <- mat_who_caused_qhigh[,3]
df$cases_in_v_by_u_qhigh <- mat_who_caused_qhigh[,2]
df$cases_in_u_by_u_qhigh <- mat_who_caused_qhigh[,4]
B <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y = cases_in_u_by_v*100), col = mylightteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_u*100), col = mylightorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_u*100), col = mydarkorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_v*100), col = mydarkteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_v_qhigh*100), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u_qhigh*100), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u_qhigh*100), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v_qhigh*100), col = mydarkteal, size = my_linesize) +
ylab("") + # Transmission mode (%)
xlab("") + # Population vaccination rate (%)
labs(fill = "") +
#onlyy_theme +
ggtitle("Transmission mode (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0), breaks = c(0, 50, 100)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none")
#*
#* Panel C - infections averted vs phi, q = 0, 0.5 ####
#*
df <- data.frame(phi = phi_vec)
df$tot_infections_notesting_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_ideal_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_mod_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_real_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_notesting_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_ideal_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_mod_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_real_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$cases_averted_ideal_q0 <- (df$tot_infections_notesting_q0 - df$tot_infections_ideal_q0)
df$cases_averted_mod_q0 <- (df$tot_infections_notesting_q0 - df$tot_infections_mod_q0)
df$cases_averted_real_q0 <- (df$tot_infections_notesting_q0 - df$tot_infections_real_q0)
df$cases_averted_ideal_qhigh <- (df$tot_infections_notesting_qhigh - df$tot_infections_ideal_qhigh)
df$cases_averted_mod_qhigh <- (df$tot_infections_notesting_qhigh - df$tot_infections_mod_qhigh)
df$cases_averted_real_qhigh <- (df$tot_infections_notesting_qhigh - df$tot_infections_real_qhigh)
C <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=cases_averted_ideal_q0/N*100), col = mygreen, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=cases_averted_mod_q0/N*100), col = myblue, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_averted_real_q0/N*100), col = myyellow, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = 0), col = myred, size = my_linesize) +
geom_line(aes(y=cases_averted_ideal_qhigh/N*100), col = mygreen, size = my_linesize) +
geom_line(aes(y=cases_averted_mod_qhigh/N*100), col = myblue, size = my_linesize) +
geom_line(aes(y = cases_averted_real_qhigh/N*100), col = myyellow, size = my_linesize) +
ylab("") + # Cases averted (#)
xlab("") +
onlyx_theme +
#nolabels_theme +
ggtitle("Infections averted\nrel. to not testing\n(% of pop.)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100), breaks = c(0, 50, 100)) +
scale_y_continuous(expand = c(0, 0), limits = c(-1, 100))
#*
#* Panel D - cases averted - % unvax, q = 0, 0.8 ####
#*
df$u_infections_notesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_idealtesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_modtesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_realtesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$prop_cases_averted_u_ideal_q0 <- (df$u_infections_notesting_q0 - df$u_infections_idealtesting_q0) / df$cases_averted_ideal_q0 * 100
df$prop_cases_averted_u_mod_q0 <- (df$u_infections_notesting_q0 - df$u_infections_modtesting_q0) / df$cases_averted_mod_q0 * 100
df$prop_cases_averted_u_real_q0 <- (df$u_infections_notesting_q0 - df$u_infections_realtesting_q0) / df$cases_averted_real_q0 * 100
df$num_cases_averted_u_ideal_q0 <- (df$u_infections_notesting_q0 - df$u_infections_idealtesting_q0)
df$num_cases_averted_u_mod_q0 <- (df$u_infections_notesting_q0 - df$u_infections_modtesting_q0)
df$num_cases_averted_u_real_q0 <- (df$u_infections_notesting_q0 - df$u_infections_realtesting_q0)
df$num_cases_averted_v_ideal_q0 <- (df$cases_averted_ideal_q0 - df$num_cases_averted_u_ideal_q0)
df$num_cases_averted_v_mod_q0 <- (df$cases_averted_mod_q0 - df$num_cases_averted_u_mod_q0)
df$num_cases_averted_v_real_q0 <- (df$cases_averted_real_q0 - df$num_cases_averted_u_real_q0)
df$u_infections_notesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_idealtesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_modtesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_realtesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$prop_cases_averted_u_ideal_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_idealtesting_qhigh) / df$cases_averted_ideal_qhigh * 100
df$prop_cases_averted_u_mod_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_modtesting_qhigh) / df$cases_averted_mod_qhigh * 100
df$prop_cases_averted_u_real_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_realtesting_qhigh) / df$cases_averted_real_qhigh * 100
df$num_cases_averted_u_ideal_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_idealtesting_qhigh)
df$num_cases_averted_u_mod_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_modtesting_qhigh)
df$num_cases_averted_u_real_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_realtesting_qhigh)
df$num_cases_averted_v_ideal_qhigh <- (df$cases_averted_ideal_qhigh - df$num_cases_averted_u_ideal_qhigh)
df$num_cases_averted_v_mod_qhigh <- (df$cases_averted_mod_qhigh - df$num_cases_averted_u_mod_qhigh)
df$num_cases_averted_v_real_qhigh <- (df$cases_averted_real_qhigh - df$num_cases_averted_u_real_qhigh)
# fix anywhere that had NaN because 0 in the denominator
this_elem <- which(is.na(df[101,]))
df[101,this_elem] <- 0
D <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=prop_cases_averted_u_ideal_q0), col = mygreen, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=prop_cases_averted_u_mod_q0), col = myblue, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=prop_cases_averted_u_real_q0), col = myyellow, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=prop_cases_averted_u_ideal_qhigh), col = mygreen, size = my_linesize) +
geom_line(aes(y=prop_cases_averted_u_mod_qhigh), col = myblue, size = my_linesize) +
geom_line(aes(y=prop_cases_averted_u_real_qhigh), col = myyellow, size = my_linesize) +
geom_line(aes(y=0), col = myred, size = my_linesize) +
ylab("") + # % of cases averted in unvax population
xlab("") +
onlyx_theme +
ggtitle("Composition of\ninfections averted\n(% unvacc.)")+
scale_x_continuous(expand = c(0, 0), limits = c(0, 100), breaks = c(0, 50, 100)) +
scale_y_continuous(expand = c(0, 0), limits = c(-1, 100))
#*
#* Panel E - Reff, q = 0, 0.8 ####
#*
df$Reff_notesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = 0, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_idealtesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = ideal_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_modtesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = mod_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_realtesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = real_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_notesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = 0, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_idealtesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = ideal_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_modtesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = mod_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_realtesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = real_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
E <- ggplot(df, aes(x=phi*100)) +
geom_hline(yintercept = 1, size = 0.5, alpha = 0.5, linetype = "dashed") +
geom_line(aes(y = Reff_notesting_q0), col = myred, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_modtesting_q0), col = myblue,  size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_idealtesting_q0), col = mygreen,  size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_realtesting_q0), col = myyellow,  size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_notesting_qhigh), col = myred, size = my_linesize) +
geom_line(aes(y = Reff_modtesting_qhigh), col = myblue, size = my_linesize) +
geom_line(aes(y = Reff_idealtesting_qhigh), col = mygreen, size = my_linesize) +
geom_line(aes(y = Reff_realtesting_qhigh), col = myyellow, size = my_linesize) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100), breaks = c(0, 50, 100)) +
scale_y_continuous(expand = c(0,0), limits = c(0, 4)) +
ylab("") + # R_eff
#ggtitle(expression(R[eff])) +
#onlyy_theme +
xlab("") +
ggtitle(expression(R[eff]))
}
fig3 <- ggarrange(A, NULL, B, NULL, C, NULL, D, NULL, E, NULL,
nrow = 1,
widths = c(1, -0.09, 1, -0.2, 1, -0.2, 1 , -0.09, 1, 0.1),
align = "hv",
labels = c(' a', NA, ' b', NA,'     c',NA, '     d', NA,'   e', NA),
label.y = 0.79)
annotate_figure(fig3,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2, hjust = 0))
ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
# _____________________________________________________________________
# FIG3 - w/homophily ####
# _____________________________________________________________________
this_phi <- 0.55
this_theta <- 0
R0 <- 4
alpha <- R0*gamma/N # transmissibility
for (i in 1){
#*
#* Panel A - transmission modes over time, phi = 55%, q = 0, 0.8 ####
#*
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, q = q0)
df$cases_in_v_by_v_q0 <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u_q0 <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v_q0 <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u_q0 <- unlist(list_who_caused[[4]])
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, q = qhigh)
df$cases_in_v_by_v_qhigh <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u_qhigh <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v_qhigh <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u_qhigh <- unlist(list_who_caused[[4]])
A <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v_q0), col = mylightteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_u_q0), col = mylightorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_u_q0), col = mydarkorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_v_q0), col = mydarkteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_v_qhigh), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u_qhigh), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u_qhigh), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v_qhigh), col = mydarkteal, size = my_linesize) +
ylab("")+
ggtitle("New daily\ninfections (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 150), breaks = c(0, 75, 150)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 300)) +
alllabels_theme
#*
#* Panel B - line plot of transmission modes over phi with q = 0.8 ####
#*
df <- data.frame(phi = phi_vec)
lists_who_caused <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused <- matrix(unlist(lists_who_caused), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext <- mat_who_caused[,5]
df$cases_in_u_by_ext <- mat_who_caused[,6]
df$cases_in_v_by_v <- mat_who_caused[,1]
df$cases_in_u_by_v <- mat_who_caused[,3]
df$cases_in_v_by_u <- mat_who_caused[,2]
df$cases_in_u_by_u <- mat_who_caused[,4]
lists_who_caused_qhigh <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused_qhigh <- matrix(unlist(lists_who_caused_qhigh), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext_qhigh <- mat_who_caused_qhigh[,5]
df$cases_in_u_by_ext_qhigh <- mat_who_caused_qhigh[,6]
df$cases_in_v_by_v_qhigh <- mat_who_caused_qhigh[,1]
df$cases_in_u_by_v_qhigh <- mat_who_caused_qhigh[,3]
df$cases_in_v_by_u_qhigh <- mat_who_caused_qhigh[,2]
df$cases_in_u_by_u_qhigh <- mat_who_caused_qhigh[,4]
B <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y = cases_in_u_by_v*100), col = mylightteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_u*100), col = mylightorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_u*100), col = mydarkorange, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_v_by_v*100), col = mydarkteal, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_in_u_by_v_qhigh*100), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u_qhigh*100), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u_qhigh*100), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v_qhigh*100), col = mydarkteal, size = my_linesize) +
ylab("") + # Transmission mode (%)
xlab("") + # Population vaccination rate (%)
labs(fill = "") +
#onlyy_theme +
ggtitle("Transmission mode\n(%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0), breaks = c(0, 50, 100)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none")
#*
#* Panel C - infections averted vs phi, q = 0, 0.5 ####
#*
df <- data.frame(phi = phi_vec)
df$tot_infections_notesting_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_ideal_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_mod_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_real_q0 <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_notesting_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_ideal_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_mod_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$tot_infections_real_qhigh <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$cases_averted_ideal_q0 <- (df$tot_infections_notesting_q0 - df$tot_infections_ideal_q0)
df$cases_averted_mod_q0 <- (df$tot_infections_notesting_q0 - df$tot_infections_mod_q0)
df$cases_averted_real_q0 <- (df$tot_infections_notesting_q0 - df$tot_infections_real_q0)
df$cases_averted_ideal_qhigh <- (df$tot_infections_notesting_qhigh - df$tot_infections_ideal_qhigh)
df$cases_averted_mod_qhigh <- (df$tot_infections_notesting_qhigh - df$tot_infections_mod_qhigh)
df$cases_averted_real_qhigh <- (df$tot_infections_notesting_qhigh - df$tot_infections_real_qhigh)
C <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=cases_averted_ideal_q0/N*100), col = mygreen, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=cases_averted_mod_q0/N*100), col = myblue, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = cases_averted_real_q0/N*100), col = myyellow, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = 0), col = myred, size = my_linesize) +
geom_line(aes(y=cases_averted_ideal_qhigh/N*100), col = mygreen, size = my_linesize) +
geom_line(aes(y=cases_averted_mod_qhigh/N*100), col = myblue, size = my_linesize) +
geom_line(aes(y = cases_averted_real_qhigh/N*100), col = myyellow, size = my_linesize) +
ylab("") + # Cases averted (#)
xlab("") +
onlyx_theme +
#nolabels_theme +
ggtitle("Infections averted\nrel. to not testing\n(% of pop.)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100), breaks = c(0, 50, 100)) +
scale_y_continuous(expand = c(0, 0), limits = c(-1, 100))
#*
#* Panel D - cases averted - % unvax, q = 0, 0.8 ####
#*
df$u_infections_notesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_idealtesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_modtesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_realtesting_q0 <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$prop_cases_averted_u_ideal_q0 <- (df$u_infections_notesting_q0 - df$u_infections_idealtesting_q0) / df$cases_averted_ideal_q0 * 100
df$prop_cases_averted_u_mod_q0 <- (df$u_infections_notesting_q0 - df$u_infections_modtesting_q0) / df$cases_averted_mod_q0 * 100
df$prop_cases_averted_u_real_q0 <- (df$u_infections_notesting_q0 - df$u_infections_realtesting_q0) / df$cases_averted_real_q0 * 100
df$num_cases_averted_u_ideal_q0 <- (df$u_infections_notesting_q0 - df$u_infections_idealtesting_q0)
df$num_cases_averted_u_mod_q0 <- (df$u_infections_notesting_q0 - df$u_infections_modtesting_q0)
df$num_cases_averted_u_real_q0 <- (df$u_infections_notesting_q0 - df$u_infections_realtesting_q0)
df$num_cases_averted_v_ideal_q0 <- (df$cases_averted_ideal_q0 - df$num_cases_averted_u_ideal_q0)
df$num_cases_averted_v_mod_q0 <- (df$cases_averted_mod_q0 - df$num_cases_averted_u_mod_q0)
df$num_cases_averted_v_real_q0 <- (df$cases_averted_real_q0 - df$num_cases_averted_u_real_q0)
df$u_infections_notesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = 0, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_idealtesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = ideal_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_modtesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = mod_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$u_infections_realtesting_qhigh <- sapply(phi_vec, compute_u_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = real_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$prop_cases_averted_u_ideal_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_idealtesting_qhigh) / df$cases_averted_ideal_qhigh * 100
df$prop_cases_averted_u_mod_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_modtesting_qhigh) / df$cases_averted_mod_qhigh * 100
df$prop_cases_averted_u_real_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_realtesting_qhigh) / df$cases_averted_real_qhigh * 100
df$num_cases_averted_u_ideal_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_idealtesting_qhigh)
df$num_cases_averted_u_mod_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_modtesting_qhigh)
df$num_cases_averted_u_real_qhigh <- (df$u_infections_notesting_qhigh - df$u_infections_realtesting_qhigh)
df$num_cases_averted_v_ideal_qhigh <- (df$cases_averted_ideal_qhigh - df$num_cases_averted_u_ideal_qhigh)
df$num_cases_averted_v_mod_qhigh <- (df$cases_averted_mod_qhigh - df$num_cases_averted_u_mod_qhigh)
df$num_cases_averted_v_real_qhigh <- (df$cases_averted_real_qhigh - df$num_cases_averted_u_real_qhigh)
# fix anywhere that had NaN because 0 in the denominator
this_elem <- which(is.na(df[101,]))
df[101,this_elem] <- 0
D <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=prop_cases_averted_u_ideal_q0), col = mygreen, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=prop_cases_averted_u_mod_q0), col = myblue, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=prop_cases_averted_u_real_q0), col = myyellow, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y=prop_cases_averted_u_ideal_qhigh), col = mygreen, size = my_linesize) +
geom_line(aes(y=prop_cases_averted_u_mod_qhigh), col = myblue, size = my_linesize) +
geom_line(aes(y=prop_cases_averted_u_real_qhigh), col = myyellow, size = my_linesize) +
geom_line(aes(y=0), col = myred, size = my_linesize) +
ylab("") + # % of cases averted in unvax population
xlab("") +
onlyx_theme +
ggtitle("Composition of\ninfections averted\n(% unvacc.)")+
scale_x_continuous(expand = c(0, 0), limits = c(0, 100), breaks = c(0, 50, 100)) +
scale_y_continuous(expand = c(0, 0), limits = c(-1, 100))
#*
#* Panel E - Reff, q = 0, 0.8 ####
#*
df$Reff_notesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = 0, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_idealtesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = ideal_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_modtesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = mod_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_realtesting_q0 <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = real_theta, q = q0,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_notesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = 0, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_idealtesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = ideal_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_modtesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = mod_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff_realtesting_qhigh <- sapply(phi_vec, compute_Reff,
VE_S, VE_I, theta = real_theta, q = qhigh,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
E <- ggplot(df, aes(x=phi*100)) +
geom_hline(yintercept = 1, size = 0.5, alpha = 0.5, linetype = "dashed") +
geom_line(aes(y = Reff_notesting_q0), col = myred, size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_modtesting_q0), col = myblue,  size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_idealtesting_q0), col = mygreen,  size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_realtesting_q0), col = myyellow,  size = 0.8, alpha = 0.6, linetype = "dashed") +
geom_line(aes(y = Reff_notesting_qhigh), col = myred, size = my_linesize) +
geom_line(aes(y = Reff_modtesting_qhigh), col = myblue, size = my_linesize) +
geom_line(aes(y = Reff_idealtesting_qhigh), col = mygreen, size = my_linesize) +
geom_line(aes(y = Reff_realtesting_qhigh), col = myyellow, size = my_linesize) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100), breaks = c(0, 50, 100)) +
scale_y_continuous(expand = c(0,0), limits = c(0, 4)) +
ylab("") + # R_eff
#ggtitle(expression(R[eff])) +
#onlyy_theme +
xlab("") +
ggtitle(expression(R[eff]))
}
fig3 <- ggarrange(A, NULL, B, NULL, C, NULL, D, NULL, E, NULL,
nrow = 1,
widths = c(1, -0.09, 1, -0.2, 1, -0.2, 1 , -0.09, 1, 0.1),
align = "hv",
labels = c(' a', NA, ' b', NA,'     c',NA, '     d', NA,'   e', NA),
label.y = 0.79)
annotate_figure(fig3,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2, hjust = 0))
ggsave("fig3test.pdf", device = cairo_pdf, width = 10, height = 3.5)
