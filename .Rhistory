labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,5)) +
theme(legend.position = "none",
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
fig4 <- ggarrange(infectavert_real, NULL, infectavert_mod, NULL,
NULL,NULL,NULL, NULL,
infper100_real, NULL, infper100_mod, NULL,
ncol = 4, nrow = 3,
widths = c(1, -0.05, 1.178, 0.05),
heights = c(1, -0.11, 1),
align = "hv")
annotate_figure(fig4,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2),
left = text_grob("Infection-acquired immunity(%)", size = 14, family = "Arial", rot = 90,
vjust = 1.1))
ggsave("fig4_heatmap_v3.pdf", device = cairo_pdf, width = 8, height = 7.5)
ggsave("fig4_heatmap_v3.svg", device = svg, width = 8, height = 7.5)
phi <- this_phi
VE_I <- 0
VE_S <- 0
theta <- 0
q <- 0
psi <- this_psi
X_I <- this_X_I
X_S <- this_X_S
H_I <- this_H_I
H_S <- this_H_S
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
C
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
D_susceptibility
D_infectiousness
NGM <- D_susceptibility %*% C %*% D_infectiousness
eigs <- eigen(NGM)$values
NGM
NGM_thisphi <- NGM
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
Reff <-
asdf
Reff
Reff_thisphi <- Reff
this_phi <- 0
phi <- 0
VE_I
VE_S
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
C
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
Reff_thisphi
phi
VE_I
this_phi <- 0.58
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
Reff_thisphi
phi <- this_phi
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
Reff_thisphi
phi
phi <- 0
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, 0*(1-phi)*psi*N*rate_u_and_v, 0*(1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, 0*(1-phi)*psi*N*rate_u_and_v, 0*(1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
NGM
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
Reff_thisphi
eigs
C
psi
psi*N
D_infectiousness
H_I <- X_I
H_S <- X_S
phi
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, 0*(1-phi)*psi*N*rate_u_and_v, 0*(1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, 0*(1-phi)*psi*N*rate_u_and_v, 0*(1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
Reff_thisphi
D_infectiousness
D_susceptibility
NGM
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
NGM
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
phi <- this_phi
this_phi
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
C <- matrix(c(phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_v_and_v, phi*psi*N*rate_v_and_v, (1-phi)*psi*N*rate_u_and_v, (1-phi)*(1-psi)*N*rate_u_and_v,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u,
phi*(1-psi)*N*rate_u_and_v, phi*psi*N*rate_u_and_v, (1-phi)*psi*N*rate_u_and_u, (1-phi)*(1-psi)*N*rate_u_and_u),
nrow = 4, ncol = 4,
byrow = TRUE)
D_susceptibility <- diag(c(alpha*(1-VE_S), alpha*(1-H_S), alpha*(1-X_S), alpha))
D_infectiousness <- diag(c((1-VE_I)/gamma, (1-H_I)/gamma, (1-X_I)*(1-theta)/gamma, (1-theta)/gamma))
NGM <- D_susceptibility %*% C %*% D_infectiousness
eigs <- eigen(NGM)$values
Reff <- max(abs(eigs))
Reff
NGM
source("setup.R")
source("setup.R")
rm.list(ls = ())
rm(list = ls())
source("setup.R")
# Either read in the corresponding RDS file
df <- readRDS("df_fig2_setupparams.RData")
source("setup.R")
# Either read in the corresponding RDS file
df <- readRDS("df_fig2_setupparams.RData")
# plot Reff
p <- ggplot(df, aes(x = phi*100, y = psi*100, z = Reff, colour = ..level..)) +
stat_contour(breaks = 1:R0, size = 1) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle(expression(R[eff]))
p_Reff <- direct.label(p, list("smart.grid"))
# plot % infections in the unvaccinated
p_breakthrough <- ggplot(df, aes(x = phi*100, y = psi*100, z = breakthrough)) +
geom_tile(aes(fill = 100 - breakthrough)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of infections among\nunvaccinated individuals") +
labs(fill = "Percent\ninfections\nin vacc.") +
theme(legend.text = element_text(size = 11),
legend.title = element_text(size = 11),
legend.title.align = 0.5,
legend.spacing.x = unit(0.5, 'cm'),
legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"))
# plot dominant transmission
p_dom <- ggplot(df, aes(x = phi*100, y = psi*100, z = dom_transmission)) +
geom_tile(aes(fill = dom_transmission)) +
stat_contour(breaks = c(50), size = 0.4, color = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("") + # xlab("Population vaccination rate (%)") +
ggtitle("% of transmission from\nunvaccinated individuals") +
labs(fill = "")+#"Percent of\ntransmission\nby unvacc.") +
theme(legend.text = element_text(size = 11),
legend.title = element_text(size = 11),
legend.title.align = 0.5,
legend.spacing.x = unit(0.5, 'cm'),
axis.text.y = element_blank()) +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) #+
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c')
align = "hv")
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c'),
align = "hv")
ggsave("suppfig2_heatmap_R06.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c'),
align = "hv")
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c'),
label.y = 0.82,
align = "hv")
ggsave("fig2_heatmap.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c'),
label.y = 0.5,
align = "hv")
ggsave("fig2_heatmap.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c'),
label.y = 0.95,
align = "hv")
ggsave("fig2_heatmap.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c(' a', 'b', 'c'),
label.y = 0.9,
align = "hv")
ggsave("fig2_heatmap.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c('a  ', 'b', 'c'),
label.y = 0.92,
align = "hv")
ggsave("fig2_heatmap.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c('a  ', 'b', 'c'),
label.y = 0.9,
align = "hv")
ggsave("fig2_heatmap.pdf", device = cairo_pdf, width = 12, height = 4)
ggarrange(p_Reff, p_breakthrough, p_dom,
ncol = 3,
widths = c(1, 1.15, 1.3),
labels = c('a  ', 'b', 'c'),
label.y = 0.92,
align = "hv")
ggsave("fig2_heatmap.svg", device = svg, width = 12, height = 4)
# Either read in the corresponding RDS file
df <- readRDS("df_fig4_setupparams.RData")
# _____________________________________________________________________
#* II: Plot fig4 ####
# _____________________________________________________________________
mylinesize <- 0.4
infectavert_mod <- ggplot(df, aes(x = phi*100, y = psi*100, fill = infections_averted_mod)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "")+#"Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,12000)) + #14000 for R0=6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
plot.title = element_text(color = myblue),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infectavert_real <- ggplot(df, aes(x = phi*100, y = psi*100, fill = infections_averted_real)) +
geom_tile() +
stat_contour(aes(z = Reff_real), breaks = 1, size = mylinesize, col =  "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 50% compliance", "") +# "Infections averted\nrel. to no testing") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,12000)) + #14000 for R0=6
theme(legend.position = "none",
plot.title = element_text(color = myyellow),
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
infper100_mod <- ggplot(df, aes(x = phi*100, y = psi*100, fill = infections_averted_per100_mod)) +
geom_tile() +
stat_contour(aes(z = Reff_mod), breaks = 1, size = mylinesize, col =  "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("") + #subtitle = "Infections averted per 100 tests") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,5)) + # 8 for R0 = 6
theme(legend.text = element_text(size = 11),
legend.spacing.x = unit(0.75, 'cm'),
legend.text.align = 0,
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank()) +
coord_fixed(1)
infper100_real <- ggplot(df, aes(x = phi*100, y = psi*100, fill = infections_averted_per100_real)) +
geom_tile() +
stat_contour(aes(z = Reff_real), breaks = 1, size = mylinesize, col = "white") +
stat_contour(aes(z = Reff), breaks = 1, size = mylinesize, col = mylightgray, linetype = "longdash") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + #ylab("Infection-acquired immunity (%)") +
xlab("") + #xlab("Population vaccination rate (%)") +
ggtitle("")+ #subtitle = "Infections averted per 100 tests") +
labs(fill = "") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits=c(0,5)) +
theme(legend.position = "none",
plot.subtitle = element_text(hjust = 0.5)) +
coord_fixed(1)
fig4 <- ggarrange(infectavert_real, NULL, infectavert_mod, NULL,
NULL,NULL,NULL, NULL,
infper100_real, NULL, infper100_mod, NULL,
ncol = 4, nrow = 3,
widths = c(1, -0.05, 1.178, 0.05),
heights = c(1, -0.11, 1),
align = "hv",
labels = c("a", NA, "b", NA, NA, NA, NA, NA, "c", NA, "d", NA))
annotate_figure(fig4,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2),
left = text_grob("Infection-acquired immunity(%)", size = 14, family = "Arial", rot = 90,
vjust = 1.1))
ggsave("fig4_heatmap_v3.pdf", device = cairo_pdf, width = 8, height = 7.5)
fig4 <- ggarrange(infectavert_real, NULL, infectavert_mod, NULL,
NULL,NULL,NULL, NULL,
infper100_real, NULL, infper100_mod, NULL,
ncol = 4, nrow = 3,
widths = c(1, -0.05, 1.178, 0.05),
heights = c(1, -0.11, 1),
align = "hv",
labels = c("a", NA, " b", NA, NA, NA, NA, NA, "c", NA, " d", NA),
label.y = 0.9)
annotate_figure(fig4,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2),
left = text_grob("Infection-acquired immunity(%)", size = 14, family = "Arial", rot = 90,
vjust = 1.1))
ggsave("fig4_heatmap_v3.pdf", device = cairo_pdf, width = 8, height = 7.5)
fig4 <- ggarrange(infectavert_real, NULL, infectavert_mod, NULL,
NULL,NULL,NULL, NULL,
infper100_real, NULL, infper100_mod, NULL,
ncol = 4, nrow = 3,
widths = c(1, -0.05, 1.178, 0.05),
heights = c(1, -0.11, 1),
align = "hv",
labels = c(" a", NA, " b", NA, NA, NA, NA, NA, " c", NA, " d", NA),
label.y = 0.88)
annotate_figure(fig4,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2),
left = text_grob("Infection-acquired immunity(%)", size = 14, family = "Arial", rot = 90,
vjust = 1.1))
ggsave("fig4_heatmap_v3.pdf", device = cairo_pdf, width = 8, height = 7.5)
fig4 <- ggarrange(infectavert_real, NULL, infectavert_mod, NULL,
NULL,NULL,NULL, NULL,
infper100_real, NULL, infper100_mod, NULL,
ncol = 4, nrow = 3,
widths = c(1, -0.05, 1.178, 0.05),
heights = c(1, -0.11, 1),
align = "hv",
labels = c("  a", NA, "  b", NA, NA, NA, NA, NA, "  c", NA, "  d", NA),
label.y = 0.87)
annotate_figure(fig4,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2),
left = text_grob("Infection-acquired immunity(%)", size = 14, family = "Arial", rot = 90,
vjust = 1.1))
ggsave("fig4_heatmap_v3.pdf", device = cairo_pdf, width = 8, height = 7.5)
fig4 <- ggarrange(infectavert_real, NULL, infectavert_mod, NULL,
NULL,NULL,NULL, NULL,
infper100_real, NULL, infper100_mod, NULL,
ncol = 4, nrow = 3,
widths = c(1, -0.05, 1.178, 0.05),
heights = c(1, -0.11, 1),
align = "hv",
labels = c("  a", NA, "  b", NA, NA, NA, NA, NA, "  c", NA, "  d", NA),
label.y = 0.87)
annotate_figure(fig4,
bottom = text_grob("Population vaccination rate (%)", size = 14, family = "Arial",
vjust = -1.2),
left = text_grob("Infection-acquired immunity (%)", size = 14, family = "Arial", rot = 90,
vjust = 1.1))
ggsave("fig4_heatmap_v3.svg", device = svg, width = 8, height = 7.5)
