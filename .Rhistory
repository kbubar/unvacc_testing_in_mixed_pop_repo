# ggplot(df_sparing_toplot, aes(x = time, y = value/N,
#                            colour = variable, group = variable)) +
#   geom_line() +
#   xlab("Time (days)") +
#   ylab("Proportion of the population") +
#   scale_color_discrete(name = "State")
# Total cases
diff <- df_full$R[max(t)] - df_sparing$R[max(t)]
if (diff > 0){
out <- "Dose sparing"
#print(paste("R0:", R0, ", one dose, diff: ", round(diff), "cases"))
} else {
out <- "Full dosage"
#print(paste("R0:", R0, ", two doses, diff: ", -1*round(diff), "cases"))
}
results[irow, icol] <- out
icol <- icol + 1
}
irow <- irow + 1
}
print(results)
1.5 + 4.5*0.487-6*0.307
1.5 + 0.5*(4.5*0.937 - 6*0.88)
1.5 + 4.5*0.937 - 6*0.88
1.5 + 4.5*0.937 - 6*0.88 - 1.5
270/30
setwd("~/student_testing_project/unvacc_testing_in_mixed_pop_repo")
source("setup.R")
testing_everyone <- 1
this_X_S <- omicron_X_S
this_X_I <- omicron_X_I
this_VE_S <- omicron_VE_S
this_VE_I <- omicron_VE_I
this_H_S <- omicron_H_S
this_H_I <- omicron_H_I
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.05)
psi_vec <- seq(0, 1, by = 0.05)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$Reff_99 <- NA
df$Reff_50 <- NA
df$Reff_biwk <- NA
df$totinfections_notesting <- NA
df$totinfections_99 <- NA
df$totinfections_50 <- NA
df$totinfections_biwk <- NA
for (i in 1:dim(df)[1]){
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_99[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_50[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_50, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_biwk[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99_biwk, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_notesting[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_99[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_50[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_50, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_biwk[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99_biwk, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
}
df$percent_reduc_inf_99 <- (df$totinfections_notesting - df$totinfections_99)/df$totinfections_notesting*100
df$percent_reduc_inf_50 <- (df$totinfections_notesting - df$totinfections_50)/df$totinfections_notesting*100
df$percent_reduc_inf_biwk <- (df$totinfections_notesting - df$totinfections_biwk)/df$totinfections_notesting*100
proc.time() - ptm
df_timeseries <- data.frame(time = t)
this_phi <- 0.58
theta_vec <- c(0, theta_50, theta_99, theta_99_biwk)
for (i in 1:4){
this_theta <- theta_vec[i]
temp <- run_leaky_model(this_phi, this_VE_I, this_VE_S, this_theta, this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
I_tot <- temp$I_v + temp$I_u + temp$I_x + temp$I_h
if (i == 1){
df_timeseries$notesting <- I_tot
} else if (i == 2){
df_timeseries$testing50 <- I_tot
} else if (i == 3){
df_timeseries$testing99 <- I_tot
} else {
df_timeseries$testing99_biwk <- I_tot
}
}
plot_timeseries <- ggplot(df_timeseries, aes(x = time)) +
geom_line(aes(y = notesting/1000), col = "black", size = 0.8) +
geom_line(aes(y = testing50/1000), col = theta50_purple, size = 0.8) +
geom_line(aes(y = testing99/1000), col = theta99_purple, size = 0.8) +
geom_line(aes(y = testing99_biwk/1000), col = thetabiwk_purple, size = 0.8) +
ggtitle("\n") + # just for formatting
ylab("Infected (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 200)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 3500/1000)) + # 2500 for R0 = 6
alllabels_theme +
coord_fixed(200/3.5) +
theme(plot.margin = margin(10, 10, 10, 10))
# infections99 <- ggplot(df_timeseries, aes(x = time)) +
#   geom_line(aes(y = testing99), col = theta99_purple, size = my_linesize) +
#   geom_line(aes(y = notesting), col = "black", size = my_linesize) +
#   ylab("Infected (#)") +
#   xlab("Time (days)") +
#   scale_x_continuous(expand = c(0, 0), limits = c(0, 250)) +
#   scale_y_continuous(expand = c(0, 0), limits = c(0, 3500)) + # 2500 for R0 = 6
#   alllabels_theme
#
# infections99_biwk <- ggplot(df_timeseries, aes(x = time)) +
#   geom_line(aes(y = testing99_biwk), col = theta99_purple, size = my_linesize) +
#   geom_line(aes(y = notesting), col = "black", size = my_linesize) +
#   ylab("Infected (#)") +
#   xlab("Time (days)") +
#   scale_x_continuous(expand = c(0, 0), limits = c(0, 250)) +
#   scale_y_continuous(expand = c(0, 0), limits = c(0, 3500)) + # 2500 for R0 = 6
#   alllabels_theme
percentreduc50 <- ggplot(df, aes(x = phi*100, y = psi*100)) + #, colour = ..level..)) +
geom_tile(aes(fill = percent_reduc_inf_50)) +
geom_contour(aes(z = Reff_50), breaks = 1, size = 0.6, color = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
geom_point(aes(x = 58, y = 35), color = "white", size = 0.2) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
theme(legend.position = "none")
percentreduc99 <- ggplot(df, aes(x = phi*100, y = psi*100)) + #, colour = ..level..)) +
geom_tile(aes(fill = percent_reduc_inf_99)) +
geom_contour(aes(z = Reff_99), breaks = 1, size = 0.6, col = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
geom_point(aes(x = 58, y = 35), color = "white", size = 0.2) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("Weekly testing, 99% compliance", "% reduction in infections due to testing") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
labs(fill = "") +
theme(axis.title.y = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_blank()) #element_text(hjust = 0.5))
percentreducbiwk <- ggplot(df, aes(x = phi*100, y = psi*100)) + #, colour = ..level..)) +
geom_tile(aes(fill = percent_reduc_inf_biwk)) +
geom_contour(aes(z = Reff_biwk), breaks = 1, size = 0.6, col = "white") +
geom_contour(aes(z = Reff), breaks = 1, size = 0.6, col = "white", linetype = "longdash") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
geom_point(aes(x = 58, y = 35), color = "white", size = 0.2) +
ylab("Infection-acquired immunity (%)") +
xlab("") +# xlab("Population vaccination rate (%)") +
ggtitle("Biweekly testing, 99% compliance", "% reduction in infections due to testing") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"), limits = c(0, 100)) +
coord_fixed(1) +
labs(fill = "") +
theme(axis.title.y = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_blank()) + #element_text(hjust = 0.5))
guides(fill=guide_legend(title="% reduction\nin infections\ndue to testing"))
percentreducbiwk <- addSmallLegend(percentreducbiwk)
percent_legend <- get_legend(percentreducbiwk)
percentreducbiwk
percentreduc50_baseline <- percentreduc50 + alllabels_theme + ggtitle("Weekly testing,\n50% Compliance")
percentreduc99_baseline <- percentreduc99 + onlyx_theme +
theme(legend.position = "none") + ggtitle("Weekly testing,\n99% Compliance") +
xlab("Population vaccination rate (%)")
percentreducbiwk_baseline <- percentreducbiwk + onlyx_theme + ggtitle("Biweekly testing,\n99% Compliance")
# panels <- ggarrange(percentreduc50_baseline, NULL,
#                     percentreduc99_baseline, NULL,
#                     percentreducbiwk_baseline,
#                     nrow = 1, ncol = 5,
#                     align = "hv",
#                     widths = c(1, -0.05, 1, -0.05, 1),
#                     labels = c(" a", NA, "   b", NA,"  c"),
#                     label.y = 0.7)
#lay <- rbind(c(1, 2))
# fig6 <- arrangeGrob(panels, percent_legend, layout_matrix = lay,
#                     widths = c(3, 0.5),
#                     left = c("Infection-acquired immunity (%)"))
# panels <- ggarrange(infections50, NULL,
#                     infections99, NULL,
#                     infections99_biwk,
#                     percentreduc50_baseline, NULL,
#                     percentreduc99_baseline, NULL,
#                     percentreducbiwk_baseline,
#                     nrow = 2, ncol = 5,
#                     align = "hv",
#                     widths = c(1, -0.05, 1, -0.05, 1),
#                     heights = c(0.4, 1))
#                     #labels = c(" a", NA, "   b", NA,"  c"),
#                     #label.y = 0.7)
panels <- ggarrange(percentreduc50_baseline, NULL,
percentreduc99_baseline, NULL,
percentreducbiwk_baseline,
nrow = 1, ncol = 5,
align = "hv",
widths = c(1, -0.16, 1, -0.16, 1),
heights = c(1),
labels = c("    a", "b", NA,"c", NA),
label.y = 1)
timeseries <- ggarrange(NULL, plot_timeseries, NULL,
nrow = 1, ncol = 3,
widths = c(0.2, 1, 0.2),
heights = c(1),
align = "hv",
labels = c(NA, "d", NA))
lay <- rbind(c(1, 2, 3))
fig6 <- arrangeGrob(panels, percent_legend, plot_timeseries, layout_matrix = lay,
widths = c(2.8, 0.2, 1))
ggsave("SuppFig6.pdf", fig6, device = cairo_pdf, width = 8, height = 2.5)
ptm <- proc.time()
phi_vec <- seq(0, 1, by = 0.01)
psi_vec <- seq(0, 1, by = 0.01)
df <- expand.grid(phi = phi_vec, psi = psi_vec)
df$Reff <- NA
df$Reff_99 <- NA
df$Reff_50 <- NA
df$Reff_biwk <- NA
df$totinfections_notesting <- NA
df$totinfections_99 <- NA
df$totinfections_50 <- NA
df$totinfections_biwk <- NA
for (i in 1:dim(df)[1]){
df$Reff[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_99[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_50[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_50, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$Reff_biwk[i] <- compute_Reff(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99_biwk, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_notesting[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = 0, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_99[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_50[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_50, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
df$totinfections_biwk[i] <- compute_tot_infections(df$phi[i], VE_I = this_VE_I, VE_S = this_VE_S,
theta = theta_99_biwk, q = this_q,
df$psi[i], X_I = this_X_I, X_S = this_X_S,
H_I = this_H_I, H_S = this_H_S)
}
df$percent_reduc_inf_99 <- (df$totinfections_notesting - df$totinfections_99)/df$totinfections_notesting*100
df$percent_reduc_inf_50 <- (df$totinfections_notesting - df$totinfections_50)/df$totinfections_notesting*100
df$percent_reduc_inf_biwk <- (df$totinfections_notesting - df$totinfections_biwk)/df$totinfections_notesting*100
proc.time() - ptm
# Either read in the corresponding RDS file
baselinedf <- readRDS("df_Fig2_baseline.RData")
waningdf <- readRDS("df_Fig2_waning.RData")
boosteddf <- readRDS("df_Fig2_boosted.RData")
omicrondf <- readRDS("df_Fig2_omicron.RData")
theme_set(theme_minimal(base_size = 11))
theme_update(text = element_text(family="Arial", size = 11),
plot.title = element_text(size = 12, hjust = 0.5, family="Arial"))
# plot Reff with number of infections
p_Reff_inf <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
#geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, skip = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
#ggtitle(expression(R[eff])) +
ggtitle("Total infections") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 10),
legend.spacing.x = unit(0.3, 'cm'))
# plot Reff with number of hospitalizations
p_Reff_hosp <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_hosp)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
#geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, skip = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
#ggtitle(expression(R[eff])) +
ggtitle("Total hospitalizations") +
scale_fill_viridis(option="viridis", limits = c(0, 400)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 10),
legend.spacing.x = unit(0.3, 'cm'))
# plot % infections in the unvaccinated
p_infection <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = breakthrough)) +
geom_tile(aes(fill = 100 - breakthrough)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of infections among\nunvaccinated individuals") +
labs(fill = "Percent\ninfections\nin vacc.") +
theme(legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) +
coord_fixed(1)
# plot dominant transmission
p_transmission <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = dom_transmission)) +
geom_tile(aes(fill = dom_transmission)) +
stat_contour(breaks = c(50), size = 0.4, color = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of transmission from\nunvaccinated individuals") +
labs(fill = "")+ #"Percent of\ntransmission\nby unvacc.") +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.title.align = 0.5,
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"))+
coord_fixed(1)
# plot % hospitalizations in the unvaccinated
p_hospitalization <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = breakthrough_hosp)) +
geom_tile(aes(fill = 100 - breakthrough_hosp)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of hospitalizations among\nunvaccinated individuals") +
labs(fill = "Percent\nhospitalizations\nin vacc.") +
theme(legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) +
coord_fixed(1)
inf_legend <- get_legend(p_Reff_inf)
p_Reff_inf <- p_Reff_inf + theme(legend.position = "none")
hosp_legend <- get_legend(p_Reff_hosp)
p_Reff_hosp <- p_Reff_hosp + theme(legend.position = "none")
percent_legend <- get_legend(p_transmission)
p_transmission <- p_transmission + theme(legend.position = "none")
fig2top <- ggarrange(NULL,p_Reff_inf, NULL, inf_legend, NULL, p_Reff_hosp, NULL, hosp_legend,
labels = c(NA, "a", NA, NA, "b", NA, NA, NA),
nrow = 1,
ncol = 8,
#align = "hv",
widths = c(0.1, 1, -0.05, 0.5, 0.01, 1, -0.05, 0.5),
label.y = 1)
fig2bottom <- ggarrange(p_infection, NULL, p_transmission, NULL, p_hospitalization, percent_legend,
labels = c("c", NA, "d", NA, "e", NA),
nrow = 1,
ncol = 6,
#align = "hv",
widths = c(1, 0.05, 1, 0.05, 1, 0.3),
label.y = 0.98)
lay <- cbind(c(1, 2))
fig2 <- arrangeGrob(fig2top, fig2bottom, layout_matrix = lay,
heights = c(0.8, 1))
ggsave("Fig2.pdf", fig2, device = cairo_pdf, width = 8, height = 5.5)
ggsave("Fig2.pdf", fig2, device = cairo_pdf, width = 8, height = 5.5)
ggsave("Fig2.pdf", fig2, device = cairo_pdf, width = 8, height = 5)
ggsave("Fig2.svg", fig2, device = svg, width = 8, height = 6)
# Either read in the corresponding RDS file
baselinedf <- readRDS("df_Fig2_baseline_R06.RData")
waningdf <- readRDS("df_Fig2_waning_R06.RData")
boosteddf <- readRDS("df_Fig2_boosted_R06.RData")
omicrondf <- readRDS("df_Fig2_omicron_R06.RData")
# Either read in the corresponding RDS file
baselinedf <- readRDS("df_Fig2_baseline_R06.RData")
waningdf <- readRDS("df_Fig2_waning_R06.RData")
boosteddf <- readRDS("df_Fig2_boosted_R06.RData")
omicrondf <- readRDS("df_Fig2_omicron_R06.RData")
theme_set(theme_minimal(base_size = 11))
theme_update(text = element_text(family="Arial", size = 11),
plot.title = element_text(size = 12, hjust = 0.5, family="Arial"))
# plot Reff with number of infections
p_Reff_inf <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_infections)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
#geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, skip = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
#ggtitle(expression(R[eff])) +
ggtitle("Total infections") +
scale_fill_viridis(option="viridis", limits = c(0, N)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 10),
legend.spacing.x = unit(0.3, 'cm'))
# plot Reff with number of hospitalizations
p_Reff_hosp <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = Reff))+ #, colour = ..level..)) +
geom_tile(aes(fill = tot_hosp)) +
geom_contour(breaks = 1:R0, size = 0.4, color = "white") +
#geom_text_contour(breaks = 1:R0, color = "white", rotate = FALSE, skip = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
#ggtitle(expression(R[eff])) +
ggtitle("Total hospitalizations") +
scale_fill_viridis(option="viridis", limits = c(0, 400)) +
coord_fixed(1) +
labs(fill = "") +
theme(legend.text = element_text(size = 10),
legend.spacing.x = unit(0.3, 'cm'))
# plot % infections in the unvaccinated
p_infection <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = breakthrough)) +
geom_tile(aes(fill = 100 - breakthrough)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of infections among\nunvaccinated individuals") +
labs(fill = "Percent\ninfections\nin vacc.") +
theme(legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) +
coord_fixed(1)
# plot dominant transmission
p_transmission <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = dom_transmission)) +
geom_tile(aes(fill = dom_transmission)) +
stat_contour(breaks = c(50), size = 0.4, color = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of transmission from\nunvaccinated individuals") +
labs(fill = "")+ #"Percent of\ntransmission\nby unvacc.") +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.title.align = 0.5,
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno"))+
coord_fixed(1)
# plot % hospitalizations in the unvaccinated
p_hospitalization <- ggplot(baselinedf, aes(x = phi*100, y = psi*100, z = breakthrough_hosp)) +
geom_tile(aes(fill = 100 - breakthrough_hosp)) +
stat_contour(breaks = c(50), size = 0.4, col = "white") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
ylab("") + # ylab("Infection-acquired immunity (%)") +
xlab("Population vaccination rate (%)") +
ggtitle("% of hospitalizations among\nunvaccinated individuals") +
labs(fill = "Percent\nhospitalizations\nin vacc.") +
theme(legend.position = "none") +
scale_fill_gradientn(colours = cet_pal(5, name = "inferno")) +
coord_fixed(1)
inf_legend <- get_legend(p_Reff_inf)
p_Reff_inf <- p_Reff_inf + theme(legend.position = "none")
hosp_legend <- get_legend(p_Reff_hosp)
p_Reff_hosp <- p_Reff_hosp + theme(legend.position = "none")
percent_legend <- get_legend(p_transmission)
p_transmission <- p_transmission + theme(legend.position = "none")
fig2top <- ggarrange(NULL,p_Reff_inf, NULL, inf_legend, NULL, p_Reff_hosp, NULL, hosp_legend,
labels = c(NA, "a", NA, NA, "b", NA, NA, NA),
nrow = 1,
ncol = 8,
#align = "hv",
widths = c(0.1, 1, -0.05, 0.5, 0.01, 1, -0.05, 0.5),
label.y = 1)
fig2bottom <- ggarrange(p_infection, NULL, p_transmission, NULL, p_hospitalization, percent_legend,
labels = c("c", NA, "d", NA, "e", NA),
nrow = 1,
ncol = 6,
#align = "hv",
widths = c(1, 0.05, 1, 0.05, 1, 0.3),
label.y = 0.98)
lay <- cbind(c(1, 2))
fig2 <- arrangeGrob(fig2top, fig2bottom, layout_matrix = lay,
heights = c(0.8, 1))
# fig2 <- ggarrange(p_Reff_inf, NULL, inf_legend, NULL, NULL, p_Reff_hosp, NULL, hosp_legend,
#                   p_infection, NULL, NULL, p_transmission, NULL, p_hospitalization, percent_legend, NULL,
#                   labels = c("a", NA, NA, NA, "b", NA, NA, NA,
#                              "c", NA, NA, "d", "e", NA, NA, NA),
#                   nrow = 2,
#                   ncol = 8,
#                   align = "hv",
#                   widths = c(1, 0.2, 0.1, 1, 0.01, 1, 0.2, 0.05),
#                   heights = c(1, 1),
#                   label.y = 0.98)
ggsave("Fig2_R06.pdf", fig2, device = cairo_pdf, width = 8, height = 6)
ggsave("Fig2_R06.svg", fig2, device = svg, width = 8, height = 6)
