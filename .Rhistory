scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none") +
geom_vline(xintercept = 58)
if (Reff_1 <= 100){
E <- E + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
}
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
calculate_derivatives_leaky <- function(t, x, parameters){
with(as.list(c(x, parameters)),{
# alpha = probability of infection given contact
# phi = percent vaccinated
# per capita contact rates
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
# if no one is susceptible or everyone/no one is vaccinated, lambda = 0
if (S_v > 0 && phi != 0){
lambda_v <- alpha*(rate_u_and_v*I_u + rate_u_and_v*I_x*(1-X_I) + rate_v_and_v*I_v*(1-VE_I))*(1-VE_S) + ext_forcing*(1-VE_S)/N
} else {
lambda_v <- 0
}
if (S_x > 0 && psi != 0){
lambda_x <- alpha*(rate_u_and_u*I_u + rate_u_and_u*I_x*(1-X_I) + rate_u_and_v*I_v*(1-VE_I))*(1-X_S) + ext_forcing*(1-X_S)/N
} else {
lambda_x <- 0
}
if (S_u > 0 && phi != 1){
lambda_u <- alpha*(rate_u_and_u*I_u + rate_u_and_u*I_x*(1-X_I) + rate_u_and_v*I_v*(1-VE_I)) + ext_forcing/N
} else {
lambda_u <- 0
}
dS_v  <- -lambda_v*S_v
dS_x  <- -lambda_x*S_x
dS_u  <- -lambda_u*S_u
# make sure S doesn't go negative
if ((S_v - lambda_v*S_v) < 0){
dS_v <- -S_v
lambda_v <- 0
}
if ((S_x - lambda_x*S_x) < 0){
dS_x <- -S_x
lambda_x <- 0
}
if ((S_u - lambda_u*S_u) < 0){
dS_u <- -S_u
lambda_u <- 0
}
dE_v  <- -dS_v - sigma*E_v
dE_x  <- -dS_x - sigma*E_x
dE_u  <- -dS_u - sigma*E_u
dI_v  <- sigma*E_v - gamma*I_v
dI_x  <- sigma*E_x - (gamma/(1-theta))*I_x
dI_u  <- sigma*E_u - (gamma/(1-theta))*I_u
dR_v  <- gamma*I_v
dR_x  <- (gamma/(1-theta))*I_x
dR_u  <- (gamma/(1-theta))*I_u
return(list(c(dS_v, dS_x, dS_u,
dE_v, dE_x, dE_u,
dI_v, dI_x, dI_u,
dR_v, dR_x, dR_u)))
}
)
}
# _____________________________________________________________________
# FIG1 - infections with no testing ####
# _____________________________________________________________________
# for loop to run fig 1
for (i in 1){
#* Panel B - infected over time ####
this_phi <- 0.58 # fully vacc. in US as of 11/4
this_theta <- 0 # no testing
this_q <- 0
df_B <- run_leaky_model(this_phi, VE_I, VE_S, q = this_q, psi = this_psi, X_I = this_X_I, X_S = this_X_S)
B <- ggplot(df_B, aes(x = time)) +
geom_line(aes(y = I_v), col = mylightgray, size = my_linesize) +
geom_line(aes(y = I_u + I_x), col = mygray, size = my_linesize, linetype = "longdash")  +
geom_line(aes(y = I_v + I_u + I_x), col = myblack, size = my_linesize) +
ylab("Infected (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 875)) +
onlyy_theme
#*  Panel D - transmission mode over time (i.e. who caused new daily cases) ####
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, q = this_q,
this_psi, this_X_I, this_X_S)
df$cases_in_v_by_v <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u <- unlist(list_who_caused[[4]])
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 25)) +
alllabels_theme
#* Panel C - total infections and breakthrough cases over phi ####
df <- data.frame(phi = phi_vec)
df$tot_infections <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff <- sapply(phi_vec, compute_Reff,
VE_S = VE_S, VE_I = VE_I, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$breakthrough <- sapply(phi_vec, compute_percent_breakthrough_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
C <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=breakthrough), col = mylightgray, size = my_linesize) +
geom_line(aes(y=tot_infections/N*100), col = myblack, size = my_linesize) +
ylab("Total infected (%)") +
xlab("Population vaccination rate (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
sec.axis = sec_axis(~., name="Breakthrough infections (%)")) +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.title.y.right = element_text(color = mylightgray),
axis.title.y.left = element_text(color = myblack),
axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_blank(),
plot.margin=unit(c(5.5, 2, 5.5, 2), "pt")) # top, right, bottom, left
Reff_1 <- min(which(df$Reff <= 1)) - 1
if (Reff_1 <= 100){
C <- C + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
#* Panel E - cumulative transmission mode over phi ####
df <- data.frame(phi = phi_vec)
lists_who_caused <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused <- matrix(unlist(lists_who_caused), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext <- mat_who_caused[,5]
df$cases_in_u_by_ext <- mat_who_caused[,6]
df$cases_in_v_by_v <- mat_who_caused[,1]
df$cases_in_u_by_v <- mat_who_caused[,3]
df$cases_in_v_by_u <- mat_who_caused[,2]
df$cases_in_u_by_u <- mat_who_caused[,4]
df_toplot <- melt(df, id = c("phi"))
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_line(size = my_linesize) +
ylab(paste("Transmission mode (%) ")) +
xlab(expression("Population vaccination rate (%)")) +
labs(fill = "") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none") +
geom_vline(xintercept = 58)
if (Reff_1 <= 100){
E <- E + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
}
phi
this_phi
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
psi
this_psi
psi <- 0.5
# setup.R works correctly if you've already installed fonts. if not, go to setup.R line 13.
source("setup.R")
# _____________________________________________________________________
# FIG1 - infections with no testing ####
# _____________________________________________________________________
# for loop to run fig 1
for (i in 1){
#* Panel B - infected over time ####
this_phi <- 0.58 # fully vacc. in US as of 11/4
this_theta <- 0 # no testing
this_q <- 0
df_B <- run_leaky_model(this_phi, VE_I, VE_S, q = this_q, psi = this_psi, X_I = this_X_I, X_S = this_X_S)
B <- ggplot(df_B, aes(x = time)) +
geom_line(aes(y = I_v), col = mylightgray, size = my_linesize) +
geom_line(aes(y = I_u + I_x), col = mygray, size = my_linesize, linetype = "longdash")  +
geom_line(aes(y = I_v + I_u + I_x), col = myblack, size = my_linesize) +
ylab("Infected (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 875)) +
onlyy_theme
#*  Panel D - transmission mode over time (i.e. who caused new daily cases) ####
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, q = this_q,
this_psi, this_X_I, this_X_S)
df$cases_in_v_by_v <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u <- unlist(list_who_caused[[4]])
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 25)) +
alllabels_theme
#* Panel C - total infections and breakthrough cases over phi ####
df <- data.frame(phi = phi_vec)
df$tot_infections <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff <- sapply(phi_vec, compute_Reff,
VE_S = VE_S, VE_I = VE_I, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$breakthrough <- sapply(phi_vec, compute_percent_breakthrough_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
C <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=breakthrough), col = mylightgray, size = my_linesize) +
geom_line(aes(y=tot_infections/N*100), col = myblack, size = my_linesize) +
ylab("Total infected (%)") +
xlab("Population vaccination rate (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
sec.axis = sec_axis(~., name="Breakthrough infections (%)")) +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.title.y.right = element_text(color = mylightgray),
axis.title.y.left = element_text(color = myblack),
axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_blank(),
plot.margin=unit(c(5.5, 2, 5.5, 2), "pt")) # top, right, bottom, left
Reff_1 <- min(which(df$Reff <= 1)) - 1
if (Reff_1 <= 100){
C <- C + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
#* Panel E - cumulative transmission mode over phi ####
df <- data.frame(phi = phi_vec)
lists_who_caused <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused <- matrix(unlist(lists_who_caused), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext <- mat_who_caused[,5]
df$cases_in_u_by_ext <- mat_who_caused[,6]
df$cases_in_v_by_v <- mat_who_caused[,1]
df$cases_in_u_by_v <- mat_who_caused[,3]
df$cases_in_v_by_u <- mat_who_caused[,2]
df$cases_in_u_by_u <- mat_who_caused[,4]
df_toplot <- melt(df, id = c("phi"))
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_line(size = my_linesize) +
ylab(paste("Transmission mode (%) ")) +
xlab(expression("Population vaccination rate (%)")) +
labs(fill = "") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none") +
geom_vline(xintercept = 58)
if (Reff_1 <= 100){
E <- E + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
}
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
df <- run_leaky_model(phi, this_VE_I, this_VE_S, theta, q, psi, X_I, X_S)
phi <- this_phi
this_VE_I
this_VE_S
theta
q
psi
X_I
X_I <- this_X_I
X_S <- this_X_S
df <- run_leaky_model(phi, this_VE_I, this_VE_S, theta, q, psi, X_I, X_S)
I_u <- df$I_u
I_x <- df$I_x
I_v <- df$I_v
S_u <- df$S_u
S_x <- df$S_x
S_v <- df$S_v
View(df)
this_phi
0.58*20000
20000-11600
8400*psi
psi
S_x[270]
S_x[270] + E_x[270] + I_x[270]
S_x[270] + df$E_x[270] + df$I_x[270] + df$R_x[270]
S_u[270] + df$E_u[270] + df$I_u[270] + df$R_u[270]
sum(df[270,])
if (q > 0){
rates_vec <- get_contact_rates_with_homophily(phi, q)
rate_v_and_v <- rates_vec[1]
rate_u_and_v <- rates_vec[2]
rate_u_and_u <- rates_vec[3]
} else {
rate_v_and_v <- 1
rate_u_and_v <- 1
rate_u_and_u <- 1
}
cases_in_v_by_v <- alpha*rate_v_and_v*I_v*(1-VE_I)*(1-VE_S)*S_v*dt
cases_in_v_by_external <- ext_forcing*(1-VE_S)*S_v/N*dt
# in u by u includes u to u, u to x, x to x, x to u
cases_in_u_by_u <- alpha*rate_u_and_u*dt*(I_u*S_u +
I_x*(1 - X_S)*(1 - X_I)*S_x +
I_u*(1 - X_S)*S_x +
I_x*(1 - X_I)*S_u)
alpha
cases_in_u_by_external <- ext_forcing*(S_u + (1-X_S)*S_x)/N*dt
# in v by u includes u to v and x to v
cases_in_v_by_u <- alpha*rate_u_and_v*(I_u + I_x*(1-X_I))*(1-VE_S)*S_v*dt
cases_in_u_by_v <- alpha*rate_u_and_v*I_v*(1-VE_I)*(S_u + (1-X_S)*S_x)*dt
list_who_caused <-   list(cases_in_v_by_v, cases_in_v_by_u, cases_in_u_by_v, cases_in_u_by_u, cases_in_v_by_external, cases_in_u_by_external)
df$cases_in_v_by_v <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u <- unlist(list_who_caused[[4]])
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 25)) +
alllabels_theme
D
this_phi
this_psi
phi
this_VE_I
this_VE_S
theta
q
psi
X_I
X_S
this_q
this_theta
# _____________________________________________________________________
# FIG1 - infections with no testing ####
# _____________________________________________________________________
# for loop to run fig 1
for (i in 1){
#* Panel B - infected over time ####
this_phi <- 0.58 # fully vacc. in US as of 11/4
this_theta <- 0 # no testing
this_q <- 0
df_B <- run_leaky_model(this_phi, VE_I, VE_S, q = this_q, psi = this_psi, X_I = this_X_I, X_S = this_X_S)
B <- ggplot(df_B, aes(x = time)) +
geom_line(aes(y = I_v), col = mylightgray, size = my_linesize) +
geom_line(aes(y = I_u + I_x), col = mygray, size = my_linesize, linetype = "longdash")  +
geom_line(aes(y = I_v + I_u + I_x), col = myblack, size = my_linesize) +
ylab("Infected (#)") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 875)) +
onlyy_theme
#*  Panel D - transmission mode over time (i.e. who caused new daily cases) ####
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, theta = this_theta, q = this_q,
this_psi, this_X_I, this_X_S)
df$cases_in_v_by_v <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u <- unlist(list_who_caused[[4]])
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 25)) +
alllabels_theme
#* Panel C - total infections and breakthrough cases over phi ####
df <- data.frame(phi = phi_vec)
df$tot_infections <- sapply(phi_vec, compute_tot_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$Reff <- sapply(phi_vec, compute_Reff,
VE_S = VE_S, VE_I = VE_I, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
df$breakthrough <- sapply(phi_vec, compute_percent_breakthrough_infections,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
C <- ggplot(df, aes(x=phi*100)) +
geom_line(aes(y=breakthrough), col = mylightgray, size = my_linesize) +
geom_line(aes(y=tot_infections/N*100), col = myblack, size = my_linesize) +
ylab("Total infected (%)") +
xlab("Population vaccination rate (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
sec.axis = sec_axis(~., name="Breakthrough infections (%)")) +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.title.y.right = element_text(color = mylightgray),
axis.title.y.left = element_text(color = myblack),
axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_blank(),
plot.margin=unit(c(5.5, 2, 5.5, 2), "pt")) # top, right, bottom, left
Reff_1 <- min(which(df$Reff <= 1)) - 1
if (Reff_1 <= 100){
C <- C + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
#* Panel E - cumulative transmission mode over phi ####
df <- data.frame(phi = phi_vec)
lists_who_caused <- lapply(phi_vec, compute_who_caused_cases_tot,
this_VE_I = VE_I, this_VE_S = VE_S, theta = this_theta, q = this_q,
psi = this_psi, X_I = this_X_I, X_S = this_X_S)
mat_who_caused <- matrix(unlist(lists_who_caused), ncol=6, byrow=TRUE)
df$cases_in_v_by_ext <- mat_who_caused[,5]
df$cases_in_u_by_ext <- mat_who_caused[,6]
df$cases_in_v_by_v <- mat_who_caused[,1]
df$cases_in_u_by_v <- mat_who_caused[,3]
df$cases_in_v_by_u <- mat_who_caused[,2]
df$cases_in_u_by_u <- mat_who_caused[,4]
df_toplot <- melt(df, id = c("phi"))
E <- ggplot(df_toplot, aes(x=phi*100, y=value*100, color = variable)) +
geom_line(size = my_linesize) +
ylab(paste("Transmission mode (%) ")) +
xlab(expression("Population vaccination rate (%)")) +
labs(fill = "") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100.1)) +
scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values = c(mygray, mylightgray, mydarkteal, mylightteal, mylightorange,
mydarkorange)) +
#labels = c("v to v", "v to u", "u to v", "u to u")) +
theme(legend.position = "none") +
geom_vline(xintercept = 58)
if (Reff_1 <= 100){
E <- E + geom_vline(xintercept = Reff_1, alpha = 0.5, linetype = "dashed", size = 0.5)
}
}
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 50)) +
alllabels_theme
#*  Panel D - transmission mode over time (i.e. who caused new daily cases) ####
df <- data.frame(time = t)
list_who_caused <- compute_who_caused_daily_infections(this_phi, VE_I, VE_S, theta = this_theta, q = this_q,
this_psi, this_X_I, this_X_S)
df$cases_in_v_by_v <- unlist(list_who_caused[[1]])
df$cases_in_v_by_u <- unlist(list_who_caused[[2]])
df$cases_in_u_by_v <- unlist(list_who_caused[[3]])
df$cases_in_u_by_u <- unlist(list_who_caused[[4]])
D <- ggplot(df, aes(x = time)) +
geom_line(aes(y = cases_in_u_by_v), col = mylightteal, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_u), col = mylightorange, size = my_linesize) +
geom_line(aes(y = cases_in_u_by_u), col = mydarkorange, size = my_linesize) +
geom_line(aes(y = cases_in_v_by_v), col = mydarkteal, size = my_linesize) +
ylab("New daily infections (#) ") +
xlab("Time (days)") +
scale_x_continuous(expand = c(0, 0), limits = c(0, 270)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 50)) +
alllabels_theme
D
# export as cairo_pdf,8x5.5in
ggarrange(B, NULL, C, NULL, NULL, NULL, D, NULL, E,
labels = c("b", NA, "c", NA, NA, NA, "d", NA, "e"),
nrow = 3,
ncol = 3,
align = "hv",
widths = c(1, -0.1, 1),
heights = c(1, -0.13, 1))
test.test <- 1
test.test
